package views;

import controller.resources.GeneralParameter;
import controller.resources.Operaciones;
import controller.resources.Report;
import controller.service.DetailService;
import controller.service.EmployeeService;
import controller.service.PersonService;
import controller.service.QuotationService;
import controller.service.SettingService;
import controller.service.WorkOrderService;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.util.Date;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import views.tableModel.DetailTableModel;
import views.tableModel.EmployeeComboBoxModel;
import views.tableModel.PersonComboBoxModel;

public class ReceiptView extends javax.swing.JDialog {

    private final DetailService detailService;
    private final PersonService personService;
    private final WorkOrderService workOrderService;
    private final DetailTableModel detailTableModel;
    private final EmployeeService employeeService;
    private final QuotationService quotationService;
    private final SettingService settingService;
    private JTextField searchNameText;
    private final Double auxTot;
    private Double receiptValue;
    private Double receiptIvaValue;

    public ReceiptView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.detailService = new DetailService();
        this.personService = new PersonService();
        this.workOrderService = new WorkOrderService();
        this.detailTableModel = new DetailTableModel();
        this.employeeService = new EmployeeService();
        this.quotationService = new QuotationService();
        this.settingService = new SettingService();
        initComponents();
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        this.chargePersonCombo();
        this.chargeEmployeeCombo();
        GeneralParameter.chargeSetting();
        this.documentControlNumber();
    }

    public ReceiptView(java.awt.Frame parent, boolean modal, WorkOrderService wos) {
        super(parent, modal);
        this.detailService = new DetailService();
        this.personService = new PersonService();
        //this.workOrderService = new WorkOrderService();
        this.detailTableModel = new DetailTableModel();
        this.employeeService = new EmployeeService();
        this.quotationService = new QuotationService();
        this.settingService = new SettingService();
        initComponents();
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        this.workOrderService = wos;
        this.chargePersonCombo();
        this.chargeEmployeeCombo();
        this.chargeWorkOrderView();
        //GeneralParameter.chargeSetting();
        //this.documentControlNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        pruebaJC = new javax.swing.JComboBox();
        add = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        receiptValueTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        receiptAdvanceTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        receiptBalanceTextField = new javax.swing.JTextField();
        workOrderSubtotalLabel = new javax.swing.JLabel();
        receiptSubtotalTextField = new javax.swing.JTextField();
        receiptIvaTextField = new javax.swing.JTextField();
        workOrderIvaLabel = new javax.swing.JLabel();
        receiptTotalTextField = new javax.swing.JTextField();
        workOrderTotalLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        receiptDiscount = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receiptDetailTable = new javax.swing.JTable();
        receiptAddBt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        receiptQuotationRb = new javax.swing.JRadioButton();
        receiptWorkOrderRb = new javax.swing.JRadioButton();
        receiptInvoiceRb = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        receiptNumberTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        receiptIssueDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        receiptDeliveryDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        receiptStateComboBox = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        searchCustomerTextField = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        receiptPersonNameTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        receiptPersonLastNameTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        receiptPersonIdentificationTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        receiptPersonPhoneTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        receiptPersonAddressTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        employeeComboBox = new javax.swing.JComboBox();
        receiptCancelButton = new javax.swing.JButton();
        receiptSaveBt = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        receiptHightPriorityJRb = new javax.swing.JRadioButton();
        receiptNormalPriorityJRb = new javax.swing.JRadioButton();
        receiptLowPriorityJRb = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        ReceiptPayFormCb = new javax.swing.JComboBox<>();
        ivaOptionCb = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();

        pruebaJC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        add.setText("jButton1");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(pruebaJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(add)
                .addContainerGap(439, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pruebaJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add))
                .addContainerGap(495, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel1.setText("VALOR:");

        receiptValueTextField.setEditable(false);
        receiptValueTextField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptValueTextField.setText("0.00");
        receiptValueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptValueTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel2.setText("ANTICIPO:");

        receiptAdvanceTextField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptAdvanceTextField.setText("0.00");
        receiptAdvanceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptAdvanceTextFieldActionPerformed(evt);
            }
        });
        receiptAdvanceTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                receiptAdvanceTextFieldPropertyChange(evt);
            }
        });
        receiptAdvanceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                receiptAdvanceTextFieldKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel3.setText("SALDO:");

        receiptBalanceTextField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptBalanceTextField.setText("0.00");
        receiptBalanceTextField.setEnabled(false);

        workOrderSubtotalLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderSubtotalLabel.setText("SUBTOTAL:");

        receiptSubtotalTextField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptSubtotalTextField.setText("0.00");

        receiptIvaTextField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptIvaTextField.setText("0.00");
        receiptIvaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptIvaTextFieldActionPerformed(evt);
            }
        });

        workOrderIvaLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderIvaLabel.setText("IVA:");

        receiptTotalTextField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptTotalTextField.setText("0.00");
        receiptTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptTotalTextFieldActionPerformed(evt);
            }
        });

        workOrderTotalLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderTotalLabel.setText("TOTAL:");

        jLabel18.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel18.setText("DESCUENTO:");

        receiptDiscount.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptDiscount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                receiptDiscountStateChanged(evt);
            }
        });
        receiptDiscount.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                receiptDiscountPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(receiptAdvanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(receiptDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(receiptValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(receiptBalanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workOrderSubtotalLabel)
                    .addComponent(receiptSubtotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(workOrderIvaLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(receiptIvaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(workOrderTotalLabel)
                    .addComponent(receiptTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(workOrderSubtotalLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(workOrderIvaLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(workOrderTotalLabel)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(receiptSubtotalTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(receiptAdvanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(receiptValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(receiptTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(receiptDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(receiptBalanceTextField)
                                .addComponent(receiptIvaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        receiptDetailTable.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(receiptDetailTable);

        receiptAddBt.setText("AÑADIR");
        receiptAddBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptAddBtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 153, 255));
        jLabel4.setText("DETALLE");

        receiptQuotationRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(receiptQuotationRb);
        receiptQuotationRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptQuotationRb.setText("Proforma");
        receiptQuotationRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptQuotationRbActionPerformed(evt);
            }
        });

        receiptWorkOrderRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(receiptWorkOrderRb);
        receiptWorkOrderRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptWorkOrderRb.setText("Orden de Trabajo");
        receiptWorkOrderRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptWorkOrderRbActionPerformed(evt);
            }
        });

        receiptInvoiceRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(receiptInvoiceRb);
        receiptInvoiceRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptInvoiceRb.setText("Factura");
        receiptInvoiceRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptInvoiceRbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(receiptAddBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(receiptQuotationRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(receiptWorkOrderRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(receiptInvoiceRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(15, 15, 15))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptAddBt)
                    .addComponent(jLabel4)
                    .addComponent(receiptQuotationRb)
                    .addComponent(receiptWorkOrderRb)
                    .addComponent(receiptInvoiceRb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "COMPROBANTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N
        jPanel4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Número:");

        receiptNumberTextField.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        receiptNumberTextField.setForeground(new java.awt.Color(255, 51, 51));
        receiptNumberTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        receiptNumberTextField.setText("000000023");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Fecha de recepción:");

        receiptIssueDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        receiptIssueDateChooser.setDate(new Date());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Fecha de entrega:");

        receiptDeliveryDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        receiptDeliveryDateChooser.setDate(new Date());

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Estado:");

        receiptStateComboBox.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptStateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDIENTE", "PAUSADO", "TERMINADO" }));
        receiptStateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptStateComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(receiptStateComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptDeliveryDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptNumberTextField)
                    .addComponent(receiptIssueDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(receiptStateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(receiptIssueDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(receiptDeliveryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        searchCustomerTextField.setEditable(true);
        searchCustomerTextField.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                searchCustomerTextFieldPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        searchCustomerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Buscar:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Nombre:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Apellido:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Identificación:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Teléfono:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Dirección:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(receiptPersonNameTextField)
                            .addComponent(receiptPersonIdentificationTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(receiptPersonLastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(receiptPersonPhoneTextField)))
                    .addComponent(receiptPersonAddressTextField)
                    .addComponent(searchCustomerTextField, 0, 450, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCustomerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(receiptPersonNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receiptPersonLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptPersonIdentificationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receiptPersonPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptPersonAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RESPONSABLE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Será realizada por:");

        employeeComboBox.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        employeeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciones un empleado...", "Julio Galán ", "Israel Sotomayor" }));
        employeeComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                employeeComboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(employeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        receiptCancelButton.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptCancelButton.setText("CANCELAR");
        receiptCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptCancelButtonActionPerformed(evt);
            }
        });

        receiptSaveBt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptSaveBt.setText("GUARDAR");
        receiptSaveBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptSaveBtActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PRIORIDAD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        receiptHightPriorityJRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(receiptHightPriorityJRb);
        receiptHightPriorityJRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptHightPriorityJRb.setText("Alta");

        receiptNormalPriorityJRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(receiptNormalPriorityJRb);
        receiptNormalPriorityJRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptNormalPriorityJRb.setText("Media");

        receiptLowPriorityJRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(receiptLowPriorityJRb);
        receiptLowPriorityJRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        receiptLowPriorityJRb.setText("Baja");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(receiptHightPriorityJRb)
                .addGap(18, 18, 18)
                .addComponent(receiptNormalPriorityJRb)
                .addGap(18, 18, 18)
                .addComponent(receiptLowPriorityJRb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptHightPriorityJRb)
                    .addComponent(receiptNormalPriorityJRb)
                    .addComponent(receiptLowPriorityJRb))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel17.setText("Pago:");

        ReceiptPayFormCb.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        ReceiptPayFormCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PAGADA", "PENDIENTE", "ANULADA" }));
        ReceiptPayFormCb.setSelectedIndex(1);
        ReceiptPayFormCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceiptPayFormCbActionPerformed(evt);
            }
        });

        ivaOptionCb.setBackground(new java.awt.Color(255, 255, 255));
        ivaOptionCb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        ivaOptionCb.setText("Iva");
        ivaOptionCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivaOptionCbActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel15.setText("Impuesto:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ReceiptPayFormCb, 0, 1, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ivaOptionCb))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(receiptSaveBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(receiptCancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(ReceiptPayFormCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(ivaOptionCb))
                        .addGap(15, 15, 15)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptSaveBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptCancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setworkOrderAndAddDetail() {
        this.detailService.getDetail().setWorkOrder(this.workOrderService.getWorkOrder());
        this.detailService.addDetailList(this.detailService.getDetail());
    }

    private void documentControlNumber() {
        if (receiptWorkOrderRb.isSelected()) {
            receiptNumberTextField.setText(String.valueOf(GeneralParameter.WORK_ORDER_NUMBER));
        } else if (receiptQuotationRb.isSelected()) {
            receiptNumberTextField.setText(String.valueOf(GeneralParameter.QUOTATION_NUMBER));
        } else if (receiptInvoiceRb.isSelected()) {
            receiptNumberTextField.setText(GeneralParameter.THIRD_INVOICE_NUMBRE);
        }
    }

    private void receiptAddBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptAddBtActionPerformed
        // TODO add your handling code here:

        if (this.personService.getPerson().getPersonId() != null) {
            new ReceiptItemView(null, true, this, this.personService.getPerson().getPrType()).setVisible(true);

            if (this.detailService.getDetail().getDetTotal() != null) {

                if (this.receiptWorkOrderRb.isSelected()) {
                    receiptSubtotalTextField.setEnabled(false);
                    receiptIvaTextField.setEnabled(false);
                    receiptTotalTextField.setEnabled(false);

                    this.setworkOrderAndAddDetail();
                    this.updateWorkOrderDetailTable();
                    this.totalIvaCalculate();
                } else if (this.receiptQuotationRb.isSelected()) {
                    receiptSubtotalTextField.setEnabled(true);
                    receiptIvaTextField.setEnabled(true);
                    receiptTotalTextField.setEnabled(true);
                    receiptAdvanceTextField.setEnabled(false);

                    this.setworkOrderAndAddDetail();
                    this.updateWorkOrderDetailTable();
                    this.totalIvaCalculate();

                } else if (this.receiptInvoiceRb.isSelected()) {
                    receiptSubtotalTextField.setEnabled(true);
                    receiptIvaTextField.setEnabled(true);
                    receiptTotalTextField.setEnabled(true);
                    receiptAdvanceTextField.setEnabled(false);

                    this.setworkOrderAndAddDetail();
                    this.updateWorkOrderDetailTable();
                    this.totalIvaCalculate();

                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleecionado un cliente");
        }
    }//GEN-LAST:event_receiptAddBtActionPerformed

    //Para calcular el iva del comprobante
    private void totalIvaCalculate() {
        Double subtotal = 0.0;
        Double iva;
        Double total;

        for (int i = 0; i < this.detailService.getDetailList().size(); i++) {
            subtotal += this.detailService.getDetailList().get(i).getDetTotal();
        }

        if (receiptWorkOrderRb.isSelected() && !ivaOptionCb.isSelected()) {

            receiptValueTextField.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(subtotal * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
            
            //Fijamos el valor del documento sin iva
            this.receiptValue = subtotal;

        } else {
            receiptSubtotalTextField.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(subtotal * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
            iva = subtotal * 0.12;
            receiptIvaTextField.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(iva * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
            total = subtotal + iva;
            receiptTotalTextField.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(total * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
            
            //Fijamos el valor del documento con iva
            this.receiptIvaValue = total;
        }

    }

    //Cargamos o actualizamos los datos de la lista detalle en la tabla
    private void updateWorkOrderDetailTable() {
        this.detailTableModel.setList(this.detailService.getDetailList());
        this.receiptDetailTable.setModel(this.detailTableModel);
        this.receiptDetailTable.updateUI();
    }

    //Cargamos una instancia del detalle del dialogo ReceiptItemView y creamos una nueva instancia del detalle 
    public void getWorkItemDetail(DetailService detailService) {
        this.detailService.setIntance(detailService.getDetail());
    }

    //Cargamos los empleados en el combobox
    private void chargeEmployeeCombo() {
        employeeComboBox.setModel(new EmployeeComboBoxModel(this.employeeService.list()));
        employeeComboBox.setSelectedIndex(0);
    }

    //Para cargar los clientes en el combobox
    private void chargePersonCombo() {

        searchNameText = (JTextField) searchCustomerTextField.getComponent(2);
        searchNameText.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == 27) {
                    searchCustomerTextField.setPopupVisible(false);
                    return;
                }
                if (evt.getKeyCode() == 10) {
                    if (searchCustomerTextField.getSelectedIndex() != - 1) {
                        PersonComboBoxModel pcm = (PersonComboBoxModel) searchCustomerTextField.getModel();
                        personService.setInstance(pcm.getSelectedItem());
                        chargePersonView();
                    }
                    searchCustomerTextField.setPopupVisible(false);
                    return;
                }

                if (evt.getKeyCode() == 40 || evt.getKeyCode() == 39 || evt.getKeyCode() == 38 || evt.getKeyCode() == 37
                        || evt.getKeyCode() == 36 || evt.getKeyCode() == 16 || evt.getKeyCode() == 35) {
                    return;
                }

                int position = searchNameText.getCaretPosition();
                String s = searchNameText.getText();
                searchCustomerTextField.setModel(new PersonComboBoxModel(personService.getPersonsByCriteriaType(searchNameText.getText())));
                searchNameText.setText(s);

                searchNameText.setCaretPosition(position);
                searchCustomerTextField.setPopupVisible(true);
            }
        });
    }

    //Cargamos en la vista los datos de un cliente
    private void chargePersonView() {
        receiptPersonNameTextField.setText(this.personService.getPerson().getPrFirstName());
        receiptPersonLastNameTextField.setText(this.personService.getPerson().getPrLastName());
        receiptPersonIdentificationTextField.setText(this.personService.getPerson().getPrIdentification());
        receiptPersonPhoneTextField.setText((this.personService.getPerson().getPrPhone()));
        receiptPersonAddressTextField.setText(this.personService.getPerson().getPrAddress());
    }

    //Cargamos un objeto tipo Orden de Trabajo
    private void chargeWorkOrderData() {
        this.workOrderService.getWorkOrder().setWorkOrderDescription("Prueba");
        if (this.receiptStateComboBox.getSelectedItem().equals("PENDIENTE")) {
            this.workOrderService.getWorkOrder().setWorkOrderState(1);
        } else if (this.receiptStateComboBox.getSelectedItem().equals("PAUSADO")) {
            this.workOrderService.getWorkOrder().setWorkOrderState(2);
        } else if (this.receiptStateComboBox.getSelectedItem().equals("TERMINADO")) {
            this.workOrderService.getWorkOrder().setWorkOrderState(3);
        }
        this.workOrderService.getWorkOrder().setWorkOrderNumber(receiptNumberTextField.getText());
        this.workOrderService.getWorkOrder().setWorkOrderIssueDate(receiptIssueDateChooser.getDate());
        this.workOrderService.getWorkOrder().setWorkOrderDeliveryDate(receiptDeliveryDateChooser.getDate());
        this.workOrderService.getWorkOrder().setWorkOrderTotal(Double.valueOf(receiptValueTextField.getText()));
        this.workOrderService.getWorkOrder().setWorkOrderAdvance(Double.valueOf(receiptAdvanceTextField.getText()));
        this.workOrderService.getWorkOrder().setWorkOrderBalance(Double.valueOf(receiptBalanceTextField.getText()));

        if (ivaOptionCb.isSelected()) {
            this.workOrderService.getWorkOrder().setWorkOrderSubtotal(Double.valueOf(this.receiptSubtotalTextField.getText()));
            this.workOrderService.getWorkOrder().setWorkOrderIva(Double.parseDouble(this.receiptIvaTextField.getText()));
            this.workOrderService.getWorkOrder().setWorkOrderInvoiceTotal(Double.valueOf(this.receiptTotalTextField.getText()));
        } else {
            this.workOrderService.getWorkOrder().setWorkOrderSubtotal(Double.valueOf("0.00"));
            this.workOrderService.getWorkOrder().setWorkOrderIva(Double.valueOf("0.00"));
            this.workOrderService.getWorkOrder().setWorkOrderInvoiceTotal(Double.valueOf("0.00"));
        }

        if (this.receiptLowPriorityJRb.isSelected()) {
            this.workOrderService.getWorkOrder().setWorkOrderPriority(0);
        } else if (this.receiptNormalPriorityJRb.isSelected()) {
            this.workOrderService.getWorkOrder().setWorkOrderPriority(1);
        } else if (this.receiptHightPriorityJRb.isSelected()) {
            this.workOrderService.getWorkOrder().setWorkOrderPriority(2);
        }

        this.workOrderService.getWorkOrder().setWorkOrderType("WorkOrder");

        this.workOrderService.getWorkOrder().setDetailList(this.detailService.getDetailList());

        this.workOrderService.getWorkOrder().setPerson(this.personService.getPerson());
        this.workOrderService.getWorkOrder().setEmployee(this.employeeService.getEmployee());

    }

    private void chargeWorkOrderView() {
        if (null != this.workOrderService.getWorkOrder().getWorkOrderState()) {
            switch (this.workOrderService.getWorkOrder().getWorkOrderState()) {
                case 1:
                    this.receiptStateComboBox.setSelectedItem("PENDIENTE");
                    break;
                case 2:
                    this.receiptStateComboBox.setSelectedItem("PAUSADO");
                    break;
                case 3:
                    this.receiptStateComboBox.setSelectedItem("TERMINADO");
                    break;
                default:
                    break;
            }
        }

        //Esta parte es temporal
        switch (this.workOrderService.getWorkOrder().getWorkOrderType()) {
            case "WorkOrder":
                this.receiptWorkOrderRb.setSelected(true);
                break;
            case "Budget":
                this.receiptQuotationRb.setSelected(true);
                break;
            case "Invoice":
                this.receiptInvoiceRb.setSelected(true);
                break;
            default:
                break;
        }
        this.ReceiptPayFormCb.setSelectedItem(this.workOrderService.getWorkOrder().getWorkOrderInvoiceState());

        this.receiptNumberTextField.setText(this.workOrderService.getWorkOrder().getWorkOrderNumber());
        this.receiptIssueDateChooser.setDate(this.workOrderService.getWorkOrder().getWorkOrderIssueDate());
        this.receiptDeliveryDateChooser.setDate(this.workOrderService.getWorkOrder().getWorkOrderDeliveryDate());
        this.personService.setInstance(this.workOrderService.getWorkOrder().getPerson());
        this.chargePersonView();

        this.employeeService.setInstance(this.workOrderService.getWorkOrder().getEmployee());
        this.employeeComboBox.setSelectedItem(this.employeeService.getEmployee());

        if (null != this.workOrderService.getWorkOrder().getWorkOrderPriority()) {
            switch (this.workOrderService.getWorkOrder().getWorkOrderPriority()) {
                case 0:
                    this.receiptLowPriorityJRb.setSelected(true);
                    break;
                case 1:
                    this.receiptNormalPriorityJRb.setSelected(true);
                    break;
                case 2:
                    this.receiptHightPriorityJRb.setSelected(true);
                    break;
                default:
                    break;
            }
        }
        this.receiptValueTextField.setText(String.valueOf(this.workOrderService.getWorkOrder().getWorkOrderTotal()));
        this.receiptBalanceTextField.setText(String.valueOf(this.workOrderService.getWorkOrder().getWorkOrderBalance()));
        this.receiptAdvanceTextField.setText(String.valueOf(this.workOrderService.getWorkOrder().getWorkOrderAdvance()));

        this.detailService.setDetailList(this.workOrderService.getWorkOrder().getDetailList());
        this.updateWorkOrderDetailTable();
    }


    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        receiptPersonAddressTextField.setText(pruebaJC.getSelectedItem().toString());
    }//GEN-LAST:event_addActionPerformed

    private void receiptValueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptValueTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptValueTextFieldActionPerformed

    private void searchCustomerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchCustomerTextFieldActionPerformed

    private void searchCustomerTextFieldPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_searchCustomerTextFieldPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (searchCustomerTextField.getItemCount() != 0) {
            PersonComboBoxModel pcbm = (PersonComboBoxModel) searchCustomerTextField.getModel();
            this.personService.setInstance(pcbm.getSelectedItem());
            if (this.personService.getPerson() != null) {
                this.chargePersonView();
            }
        }
    }//GEN-LAST:event_searchCustomerTextFieldPopupMenuWillBecomeInvisible

    private void saveWorkOrder() {
        if (this.workOrderService.getWorkOrder().getWorkOrderId() == null) {
            this.chargeWorkOrderData();
            if (this.workOrderService.saveWorkOrder()) {
                JOptionPane.showMessageDialog(this, "La orden de trabajo ha sido guardada correctamente");
                //Actualizamos el número de orden de trabajo
                this.updateDocumentNumber();
                //Para imprimir el reporte
                Report print = new Report();
                print.printWorkOrder(workOrderService, detailTableModel);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "No se guardo la orden de trabajo");
            }
        } else if (this.workOrderService.getWorkOrder().getWorkOrderId() != null) {
            this.chargeWorkOrderData();
            if (this.workOrderService.updateWorkOrder()) {
                JOptionPane.showMessageDialog(this, "Orden de trabajo modificada correctamente");
                //En esta parte iria si desea convertir la orden de trabajo en factura o no
            }
        }
    }

    private void receiptSaveBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptSaveBtActionPerformed
        // TODO add your handling code here:

        if (receiptWorkOrderRb.isSelected()) {
            if (this.personService.getPerson().getPersonId() != null) {
                if (!this.detailService.getDetailList().isEmpty()) {
                    if (this.employeeService.getEmployee().getEmployeeId() != null) {
                        Double receiptAdvanceTemp = Double.valueOf(receiptAdvanceTextField.getText());
                        Double receiptValueTemp = Double.valueOf(receiptValueTextField.getText());
                        //Comparamos si el valor del anticipo es igual al valor del comprobante, si lo es abrimos la ventana para dar vuelto
                        if (Objects.equals(receiptAdvanceTemp, receiptValueTemp)) {
                            if (ivaOptionCb.isSelected()) {
                                //Cargamos el valor total con iva en la ventana de cambio
                                new CambioV(null, true, Double.parseDouble(receiptTotalTextField.getText()), this.workOrderService).setVisible(true);
                            } else {
                                //Cargamos el valor total sin iva en la ventana de cambio
                                new CambioV(null, true, Double.parseDouble(receiptValueTextField.getText()), this.workOrderService).setVisible(true);
                            }
                            //Para guardar la orden de trabajo cuando se paga el valor completo de la misma
                            if (this.workOrderService.getWorkOrder().getWorkOrderChange() != null) {
                                this.saveWorkOrder();
                            }

                        } else {
                            //Guardamos la orden de trabajo cuando no se paga el valor completo de la misma
                            this.saveWorkOrder();
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún empleado");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La orden de trabajo no tiene items");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No ha seleccionado ningún cliente");
            }

        } else if (receiptQuotationRb.isSelected()) {
            if (this.personService.getPerson().getPersonId() != null) {
                if (!this.detailService.getDetailList().isEmpty()) {
                    if (this.quotationService.getQuotation().getQuotationId() == null) {
                        this.chargeQuotationData();
                        if (this.quotationService.saveQuotation()) {
                            JOptionPane.showMessageDialog(this, "La proforma ha sido guardada correctamente");
                            //Actualizamos el número de proforma automáticamente
                            this.updateDocumentNumber();
                            //Imprimimos el reporte
                            Report print = new Report();
                            print.printQuotation(quotationService, detailTableModel);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "No se guardo la proforma");
                        }
                    } else if (this.quotationService.getQuotation().getQuotationId() != null) {
                        this.chargeQuotationData();
                        if (this.quotationService.updateQuotation()) {
                            JOptionPane.showMessageDialog(this, "Proforma modificada correctamente");
                            //En esta parte iria si desea convertir la orden de trabajo en factura o no
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La orden de trabajo no tiene items");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No ha seleccionado ningún cliente");
            }
        } else if (receiptInvoiceRb.isSelected()) {
            JOptionPane.showMessageDialog(this, "Ha guardado la factura correctamente");
        }
    }//GEN-LAST:event_receiptSaveBtActionPerformed

    //Actualizar el numero de comprobante al momento de guardar
    private void updateDocumentNumber() {
        //Fijamos la instamcia de la configuración
        this.settingService.setInstance(this.settingService.getUniqueSetting());
        //Actualizamos el número de comprobante de acuerdo a la selección (Proforma, Orden de Trabajo, Factura)
        if (receiptQuotationRb.isSelected()) {
            this.settingService.getSetting().setQUOTATION_NUMBER(Integer.valueOf(receiptNumberTextField.getText()) + 1);
        } else if (receiptWorkOrderRb.isSelected()) {
            this.settingService.getSetting().setWORK_ORDER_NUMBER(Integer.valueOf(receiptNumberTextField.getText()) + 1);
        } else if (receiptInvoiceRb.isSelected()) {
            this.settingService.getSetting().setTHIRD_INVOICE_NUMBER("" + (Integer.valueOf(receiptNumberTextField.getText()) + 1));
        }
        //Actualizamos la configuración del número de comprobante desde el servicio
        if (this.settingService.updateSetting()) {
            System.out.println("Se ha guardado correctamete la configuracion");
        }
    }

    //Cargamos un objeto tipo proforma
    private void chargeQuotationData() {
        this.quotationService.getQuotation().setQuotationNumber(receiptNumberTextField.getText());
        this.quotationService.getQuotation().setQuotationSubtotal(Double.valueOf(receiptSubtotalTextField.getText()));
        this.quotationService.getQuotation().setQuotationIva(Double.valueOf(receiptIvaTextField.getText()));
        this.quotationService.getQuotation().setQuotationTotal(Double.valueOf(receiptTotalTextField.getText()));
        this.quotationService.getQuotation().setQuotationDate(receiptIssueDateChooser.getDate());
        this.quotationService.getQuotation().setPerson(this.personService.getPerson());
    }

    private void receiptStateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptStateComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptStateComboBoxActionPerformed

    private void receiptCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptCancelButtonActionPerformed
        // TODO add your handling code here:
        this.closeWindow();
    }//GEN-LAST:event_receiptCancelButtonActionPerformed

    private void employeeComboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_employeeComboBoxPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        EmployeeComboBoxModel employeeComboBoxModel = (EmployeeComboBoxModel) employeeComboBox.getModel();
        this.employeeService.setInstance(employeeComboBoxModel.getSelectedItem());
    }//GEN-LAST:event_employeeComboBoxPopupMenuWillBecomeInvisible

    private void receiptAdvanceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptAdvanceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptAdvanceTextFieldActionPerformed

    private void receiptAdvanceTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_receiptAdvanceTextFieldPropertyChange
        // TODO add your handling code here:
        //balanceTotalCalculate();
    }//GEN-LAST:event_receiptAdvanceTextFieldPropertyChange

    private void receiptAdvanceTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_receiptAdvanceTextFieldKeyReleased
        // TODO add your handling code here:
        Double advanceTemp = Double.valueOf(receiptAdvanceTextField.getText());
        Double valueTemp = Double.valueOf(receiptValueTextField.getText());
        if (advanceTemp <= valueTemp) {
            ReceiptPayFormCb.setSelectedItem("PENDIENTE");
        }
        if (Objects.equals(advanceTemp, valueTemp)) {
            ReceiptPayFormCb.getModel().setSelectedItem("PAGADA");
        }
        balanceTotalCalculate();
    }//GEN-LAST:event_receiptAdvanceTextFieldKeyReleased

    private void receiptQuotationRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptQuotationRbActionPerformed
        // TODO add your handling code here:
        if (receiptQuotationRb.isSelected()) {
            ReceiptPayFormCb.setEnabled(true);
            ivaOptionCb.setSelected(true);
            receiptNumberTextField.setText(String.valueOf(GeneralParameter.QUOTATION_NUMBER));
            receiptHightPriorityJRb.setEnabled(false);
            receiptNormalPriorityJRb.setEnabled(false);
            receiptLowPriorityJRb.setEnabled(false);
            employeeComboBox.setEnabled(false);
            ReceiptPayFormCb.setEnabled(false);
            receiptAdvanceTextField.setEditable(false);
            receiptSubtotalTextField.setEditable(false);
            receiptIvaTextField.setEditable(false);
            receiptTotalTextField.setEditable(false);
            receiptStateComboBox.setEnabled(false);
        }
    }//GEN-LAST:event_receiptQuotationRbActionPerformed

    private void receiptInvoiceRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptInvoiceRbActionPerformed
        // TODO add your handling code here:
        if (receiptInvoiceRb.isSelected()) {
            ReceiptPayFormCb.setEnabled(true);
            ReceiptPayFormCb.setSelectedIndex(0);
            receiptNumberTextField.setText(GeneralParameter.THIRD_INVOICE_NUMBRE);

        }
    }//GEN-LAST:event_receiptInvoiceRbActionPerformed

    private void receiptWorkOrderRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptWorkOrderRbActionPerformed
        // TODO add your handling code here:
        if (receiptWorkOrderRb.isSelected()) {
            ReceiptPayFormCb.setEnabled(false);
            ReceiptPayFormCb.setSelectedItem("Seleccione...");
            receiptNumberTextField.setText(String.valueOf(GeneralParameter.WORK_ORDER_NUMBER));
            ReceiptPayFormCb.setEnabled(true);
            receiptAdvanceTextField.setEditable(true);
            receiptStateComboBox.setEnabled(true);
            employeeComboBox.setEnabled(true);
            receiptHightPriorityJRb.setEnabled(true);
            receiptNormalPriorityJRb.setEnabled(true);
            receiptLowPriorityJRb.setEnabled(true);
        }
    }//GEN-LAST:event_receiptWorkOrderRbActionPerformed

    private void ivaOptionCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivaOptionCbActionPerformed
        // TODO add your handling code here:
        if (ivaOptionCb.isSelected()) {
            totalIvaCalculate();
        } else {
            receiptSubtotalTextField.setText("0.00");
            receiptIvaTextField.setText("0.00");
            receiptTotalTextField.setText("0.00");
        }
    }//GEN-LAST:event_ivaOptionCbActionPerformed

    private void receiptTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptTotalTextFieldActionPerformed

    private void ReceiptPayFormCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceiptPayFormCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReceiptPayFormCbActionPerformed

    private void receiptIvaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptIvaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiptIvaTextFieldActionPerformed

    private void receiptDiscountPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_receiptDiscountPropertyChange
        // TODO add your handling code here:
        

    }//GEN-LAST:event_receiptDiscountPropertyChange

    private void receiptDiscountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_receiptDiscountStateChanged
        // TODO add your handling code here:
        Double receiptValueTemp = this.receiptValue;
        Double receiptDiscountTemp = Double.valueOf(this.receiptDiscount.getValue().toString());
        Double receiptTotal = receiptValueTemp - ((receiptValueTemp * receiptDiscountTemp) / 100);

        receiptValueTextField.setText(receiptTotal.toString());
    }//GEN-LAST:event_receiptDiscountStateChanged

    private void balanceTotalCalculate() {
        Double temp;
        temp = Double.valueOf(this.receiptValueTextField.getText()) - Double.valueOf(this.receiptAdvanceTextField.getText());
        this.receiptBalanceTextField.setText(String.valueOf(temp));
        
        
    }

    //Método encargado de cerrar todos los procesos de un JDialog
    private void closeWindow() {
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ReceiptPayFormCb;
    private javax.swing.JButton add;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox employeeComboBox;
    private javax.swing.JCheckBox ivaOptionCb;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox pruebaJC;
    private javax.swing.JButton receiptAddBt;
    private javax.swing.JTextField receiptAdvanceTextField;
    private javax.swing.JTextField receiptBalanceTextField;
    private javax.swing.JButton receiptCancelButton;
    private com.toedter.calendar.JDateChooser receiptDeliveryDateChooser;
    private javax.swing.JTable receiptDetailTable;
    private javax.swing.JSpinner receiptDiscount;
    private javax.swing.JRadioButton receiptHightPriorityJRb;
    private javax.swing.JRadioButton receiptInvoiceRb;
    private com.toedter.calendar.JDateChooser receiptIssueDateChooser;
    private javax.swing.JTextField receiptIvaTextField;
    private javax.swing.JRadioButton receiptLowPriorityJRb;
    private javax.swing.JRadioButton receiptNormalPriorityJRb;
    private javax.swing.JTextField receiptNumberTextField;
    private javax.swing.JTextField receiptPersonAddressTextField;
    private javax.swing.JTextField receiptPersonIdentificationTextField;
    private javax.swing.JTextField receiptPersonLastNameTextField;
    private javax.swing.JTextField receiptPersonNameTextField;
    private javax.swing.JTextField receiptPersonPhoneTextField;
    private javax.swing.JRadioButton receiptQuotationRb;
    private javax.swing.JButton receiptSaveBt;
    private javax.swing.JComboBox<String> receiptStateComboBox;
    private javax.swing.JTextField receiptSubtotalTextField;
    private javax.swing.JTextField receiptTotalTextField;
    private javax.swing.JTextField receiptValueTextField;
    private javax.swing.JRadioButton receiptWorkOrderRb;
    private javax.swing.JComboBox searchCustomerTextField;
    private javax.swing.JLabel workOrderIvaLabel;
    private javax.swing.JLabel workOrderSubtotalLabel;
    private javax.swing.JLabel workOrderTotalLabel;
    // End of variables declaration//GEN-END:variables

}

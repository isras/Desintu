package views;

import controller.resources.GeneralParameter;
import javax.swing.JOptionPane;
import controller.resources.Operaciones;
import controller.service.AccountingEntryService;
import java.util.Date;
import views.tableModel.AccountingEntryTableModel;

public class AccountingEntryV extends javax.swing.JDialog {

    private final AccountingEntryService aes;
    private final AccountingEntryTableModel aetm;
    private final Double auxTot;

    public AccountingEntryV(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        this.aes = new AccountingEntryService();
        this.aetm = new AccountingEntryTableModel();
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        initComponents();
        if (!this.aes.list().isEmpty()) {
            this.aes.setAccountingEntryList(this.aes.listByCurrentDate(new Date()));
            this.updateAccountingEntryTable();
            this.totalCalculate();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountingEntryBG = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        aEntrySaveBt = new javax.swing.JButton();
        aEntryEditBt = new javax.swing.JButton();
        aEntryRemoveBt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        aEntryDescriptionTf = new javax.swing.JTextField();
        aEntryNewBt = new javax.swing.JButton();
        aEntryDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        aEntryValueTf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        aEntryInflowRB = new javax.swing.JRadioButton();
        aEntryOutflowRB = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        aEntryTable = new javax.swing.JTable();
        aEntryOutflowTotalLb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        aEntryInflowTotalLb = new javax.swing.JLabel();
        aEntryCloseBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        aEntrySaveBt.setText("GUARDAR");
        aEntrySaveBt.setEnabled(false);
        aEntrySaveBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aEntrySaveBtActionPerformed(evt);
            }
        });

        aEntryEditBt.setText("EDITAR");
        aEntryEditBt.setEnabled(false);

        aEntryRemoveBt.setText("REMOVER");
        aEntryRemoveBt.setEnabled(false);
        aEntryRemoveBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aEntryRemoveBtActionPerformed(evt);
            }
        });

        jLabel3.setText("DESCRIPCIÃ“N:");

        aEntryDescriptionTf.setEnabled(false);

        aEntryNewBt.setText("NUEVO");
        aEntryNewBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aEntryNewBtActionPerformed(evt);
            }
        });

        aEntryDateChooser.setEnabled(false);

        jLabel4.setText("VALOR:");

        aEntryValueTf.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aEntryValueTf.setText("0.00");
        aEntryValueTf.setEnabled(false);

        jLabel5.setText("FECHA:");

        aEntryInflowRB.setBackground(new java.awt.Color(255, 255, 255));
        accountingEntryBG.add(aEntryInflowRB);
        aEntryInflowRB.setText("INGRESO");

        aEntryOutflowRB.setBackground(new java.awt.Color(255, 255, 255));
        accountingEntryBG.add(aEntryOutflowRB);
        aEntryOutflowRB.setText("EGRESO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aEntryDescriptionTf))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(aEntryNewBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aEntrySaveBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aEntryEditBt)
                        .addGap(2, 2, 2)
                        .addComponent(aEntryRemoveBt))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(aEntryInflowRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aEntryOutflowRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aEntryValueTf, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aEntryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(aEntryValueTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(aEntryInflowRB)
                        .addComponent(aEntryOutflowRB))
                    .addComponent(aEntryDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aEntryDescriptionTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aEntryRemoveBt)
                    .addComponent(aEntryEditBt)
                    .addComponent(aEntrySaveBt)
                    .addComponent(aEntryNewBt))
                .addGap(15, 15, 15))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        aEntryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        aEntryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aEntryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(aEntryTable);

        aEntryOutflowTotalLb.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        aEntryOutflowTotalLb.setText("0.00");

        jLabel2.setText("Total:");

        aEntryInflowTotalLb.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        aEntryInflowTotalLb.setText("0.00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(aEntryInflowTotalLb)
                        .addGap(40, 40, 40)
                        .addComponent(aEntryOutflowTotalLb)
                        .addGap(44, 44, 44))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aEntryOutflowTotalLb)
                    .addComponent(jLabel2)
                    .addComponent(aEntryInflowTotalLb))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        aEntryCloseBt.setText("CERRAR");
        aEntryCloseBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aEntryCloseBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(aEntryCloseBt)))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(aEntryCloseBt)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void aEntrySaveBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aEntrySaveBtActionPerformed
        // TODO add your handling code here:
        if (aEntryDescriptionTf.getText().equals("") || aEntryValueTf.getText().equals("0.00") || aEntryDateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(aEntryCloseBt, "FALTAN CAMPOS DE TEXTO");
        } else {
            if (this.aes.getAccountingEntry().getAccountingEntryId() == null) {
                this.chargeAccountingEntryData();
                if (this.aes.saveAccountingEntry()) {
                    this.aes.addAccountingEntryList(this.aes.getAccountingEntry());
                    JOptionPane.showMessageDialog(this, "Entrada guardada correctamente");
                    this.updateAccountingEntryTable();
                    this.totalCalculate();
                    this.saveClearFields();

                }
            } else {
                if (this.aes.getAccountingEntry().getAccountingEntryId() != null) {
                    this.chargeAccountingEntryData();
                    if (this.aes.updateAccountingEntry()) {
                        JOptionPane.showMessageDialog(this, "Entrada modificada correctamente");
                        this.updateAccountingEntryTable();
                        this.totalCalculate();
                    }
                }
            }
        }


    }//GEN-LAST:event_aEntrySaveBtActionPerformed

    private void updateAccountingEntryTable() {
        this.aetm.setList(this.aes.getAccountingEntryList());
        this.aEntryTable.setModel(this.aetm);

        this.aEntryTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        this.aEntryTable.getColumnModel().getColumn(1).setPreferredWidth(175);
        this.aEntryTable.getColumnModel().getColumn(2).setPreferredWidth(230);
        this.aEntryTable.getColumnModel().getColumn(0).setCellRenderer(Operaciones.getRenderCellCenter());
        this.aEntryTable.getColumnModel().getColumn(3).setCellRenderer(Operaciones.getRenderCellCenter());
        this.aEntryTable.getColumnModel().getColumn(4).setCellRenderer(Operaciones.getRenderCellCenter());
        this.aEntryTable.updateUI();
    }

    private void totalCalculate() {
        double inflowTotal = 0;
        double outflowTotal = 0;
        for (int i = 0; i < this.aes.getAccountingEntryList().size(); i++) {
            if (this.aes.getAccountingEntryList().get(i).getAeType() == 0) {
                inflowTotal += this.aes.getAccountingEntryList().get(i).getAeValue();
                aEntryInflowTotalLb.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(inflowTotal*auxTot)/auxTot, GeneralParameter.ACCURACY_VALUE)));
            } else {
                outflowTotal += this.aes.getAccountingEntryList().get(i).getAeValue();
                aEntryOutflowTotalLb.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(outflowTotal*auxTot)/auxTot, GeneralParameter.ACCURACY_VALUE)));
            }
        }
    }

    private void chargeAccountingEntryData() {
        this.aes.getAccountingEntry().setAeCreatedDate(aEntryDateChooser.getDate());
        if (aEntryInflowRB.isSelected()) {
            this.aes.getAccountingEntry().setAeType(0);
        } else {
            this.aes.getAccountingEntry().setAeType(1);
        }
        this.aes.getAccountingEntry().setAeDescription(aEntryDescriptionTf.getText());
        this.aes.getAccountingEntry().setAeValue(Double.valueOf(aEntryValueTf.getText()));
    }

    private void chargeAccountingEntryView() {
        if (this.aes.getAccountingEntry().getAeType() == 0) {
            aEntryInflowRB.setSelected(true);
        } else {
            aEntryOutflowRB.setSelected(true);
        }
        aEntryDateChooser.setDate(this.aes.getAccountingEntry().getAeCreatedDate());
        aEntryDescriptionTf.setText(this.aes.getAccountingEntry().getAeDescription());
        aEntryValueTf.setText(String.valueOf(this.aes.getAccountingEntry().getAeValue()));
    }

    private void editRemove() {
        if (aEntryTable.getSelectedRow() == -1 || aEntryTable.getSelectedRowCount() > 1) {
            controller.resources.Message.seleccionarFila("egreso");
        } else {

            aEntryEditBt.setEnabled(true);
            aEntryRemoveBt.setEnabled(true);
            aEntryNewBt.setEnabled(true);
            aEntrySaveBt.setEnabled(false);
            AccountingEntryTableModel ast = (AccountingEntryTableModel) aEntryTable.getModel();
            // AccountingEntry as = ast.getFilas().get(aEntryTable.getSelectedRow());

//            if (as.getAsientType().equals(AsientType.Ingreso)) {
//                ingresoRadio.setSelected(true);
//            } else {
//                egresoRadio.setSelected(true);
//            }
//            aEntryDateChooser.setDate(as.getDate());
//            aEntryValueTf.setText(Operaciones.parteDecimal(as.getValue(), 2));
//            aEntryDescriptionTf.setText(as.getDescription());
            //ingresoRadio.setEnabled(true);
            //egresoRadio.setEnabled(true);
            aEntryDateChooser.setEnabled(true);
            aEntryValueTf.setEditable(true);
            aEntryDescriptionTf.setEditable(true);
        }
    }

    private void aEntryNewBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aEntryNewBtActionPerformed
        // TODO add your handling code here:
        this.newClearFields();

    }//GEN-LAST:event_aEntryNewBtActionPerformed

    private void editFieldsControl() {
        aEntryNewBt.setEnabled(false);
        aEntrySaveBt.setEnabled(true);
        aEntryEditBt.setEnabled(true);
        aEntryRemoveBt.setEnabled(true);
        aEntryDateChooser.setEnabled(false);
        aEntryDescriptionTf.setEnabled(true);
        aEntryValueTf.setEnabled(true);
    }

    private void newClearFields() {
        aEntryNewBt.setEnabled(false);
        aEntrySaveBt.setEnabled(true);
        aEntryEditBt.setEnabled(false);
        aEntryRemoveBt.setEnabled(false);
        aEntryDateChooser.setEnabled(true);
        aEntryDescriptionTf.setEnabled(true);
        aEntryValueTf.setEnabled(true);
        aEntryDescriptionTf.setText("");
        aEntryValueTf.setText("0.00");
        aEntryDateChooser.setDate(new Date());
    }

    private void saveClearFields() {
        aEntryNewBt.setEnabled(true);
        aEntrySaveBt.setEnabled(false);
        aEntryEditBt.setEnabled(false);
        aEntryRemoveBt.setEnabled(false);
        aEntryDateChooser.setEnabled(false);
        aEntryDescriptionTf.setEnabled(false);
        aEntryValueTf.setEnabled(false);
        aEntryDescriptionTf.setText("");
        aEntryValueTf.setText("0.00");
        aEntryDateChooser.setDate(new Date());
        aEntryInflowRB.setSelected(false);
        aEntryOutflowRB.setSelected(false);
    }

    private void aEntryCloseBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aEntryCloseBtActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_aEntryCloseBtActionPerformed

    private void aEntryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aEntryTableMouseClicked
        // TODO add your handling code here:
        this.aes.setInstance(this.aes.getAccountingEntryList().get(aEntryTable.getSelectedRow()));
        this.chargeAccountingEntryView();
        this.editFieldsControl();
        //this.editRemove();
    }//GEN-LAST:event_aEntryTableMouseClicked

    private void aEntryRemoveBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aEntryRemoveBtActionPerformed
        // TODO add your handling code here:

        double inflowTotal = Double.valueOf(aEntryInflowTotalLb.getText());
        double outflowTotal = Double.valueOf(aEntryOutflowTotalLb.getText());

        if (aEntryTable.getSelectedRow() != -1) {

            if (this.aes.getAccountingEntryList().get(aEntryTable.getSelectedRow()).getAeType() == 0) {
                inflowTotal -= this.aes.getAccountingEntryList().get(aEntryTable.getSelectedRow()).getAeValue();
                aEntryInflowTotalLb.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(inflowTotal*auxTot)/auxTot, GeneralParameter.ACCURACY_VALUE)));
            } else {
                outflowTotal -= this.aes.getAccountingEntryList().get(aEntryTable.getSelectedRow()).getAeValue();
                aEntryOutflowTotalLb.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(outflowTotal*auxTot)/auxTot, GeneralParameter.ACCURACY_VALUE)));
            }
            this.aes.getAccountingEntryList().remove(aEntryTable.getSelectedRow());
            aEntryTable.updateUI();
            //this.totalCalculate();

            if (this.aes.removeAccountingEntry()) {
                JOptionPane.showMessageDialog(this, "Registro eliminado correctamente");
            }

        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningÃºn registro");
        }
    }//GEN-LAST:event_aEntryRemoveBtActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aEntryCloseBt;
    private com.toedter.calendar.JDateChooser aEntryDateChooser;
    private javax.swing.JTextField aEntryDescriptionTf;
    private javax.swing.JButton aEntryEditBt;
    private javax.swing.JRadioButton aEntryInflowRB;
    private javax.swing.JLabel aEntryInflowTotalLb;
    private javax.swing.JButton aEntryNewBt;
    private javax.swing.JRadioButton aEntryOutflowRB;
    private javax.swing.JLabel aEntryOutflowTotalLb;
    private javax.swing.JButton aEntryRemoveBt;
    private javax.swing.JButton aEntrySaveBt;
    private javax.swing.JTable aEntryTable;
    private javax.swing.JTextField aEntryValueTf;
    private javax.swing.ButtonGroup accountingEntryBG;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controller.resources.GeneralParameter;
import controller.resources.Operaciones;
import controller.service.DetailService;
import controller.service.ProductService;
import javax.swing.DefaultComboBoxModel;
import views.tableModel.ProductComboBoxModel;

/**
 *
 * @author Usuario
 */
public class ReceiptItemView extends javax.swing.JDialog {

    private double materialValue;
    private double finishedValue;
    private double serviceValue;
    private double totalValue;
    private String miName;
    private String tName;
    private String sName;
    private String descriptionText;
    private ReceiptView wo;
    private final DetailService ds;
    private final ProductService ps;
    private final double auxTot;
    private String personType;

    public ReceiptItemView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.ps = new ProductService();
        this.ds = new DetailService();
        initComponents();
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        this.chargeCombos();
    }

    public ReceiptItemView(java.awt.Frame parent, boolean modal, ReceiptView wo, String personType) {
        super(parent, modal);
        this.ps = new ProductService();
        this.ds = new DetailService();
        initComponents();
        this.wo = wo;
        this.personType = personType;
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        this.chargeCombos();
    }

    private void chargeCombos() {
        this.ps.setProductListPrintMaterial(this.ps.getProductByType("mi"));
        this.ps.setProductListFinished(this.ps.getProductByType("t"));
        this.ps.setProductListService(this.ps.getProductByType("s"));

        if (this.ps.getProductListPrintMaterial().isEmpty()) {
            DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
            dcbm.addElement("Sin productos");
            this.workOrderItemPrintJC.setModel(dcbm);
        } else {
            this.workOrderItemPrintJC.setModel(new ProductComboBoxModel(this.ps.getProductListPrintMaterial()));
            this.workOrderItemPrintJC.setSelectedIndex(0);
        }

        if (this.ps.getProductListFinished().isEmpty()) {
            DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
            dcbm.addElement("Sin productos");
            this.workOrderItemFinishedJC.setModel(dcbm);
        } else {
            this.workOrderItemFinishedJC.setModel(new ProductComboBoxModel(this.ps.getProductListFinished()));
            this.workOrderItemFinishedJC.setSelectedIndex(0);
        }

        if (this.ps.getProductListService().isEmpty()) {
            DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
            dcbm.addElement("Sin productos");
            this.workOrderItemServiceJC.setModel(dcbm);
        } else {
            this.workOrderItemServiceJC.setModel(new ProductComboBoxModel(this.ps.getProductListService()));
            this.workOrderItemServiceJC.setSelectedIndex(0);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workTypeBG = new javax.swing.ButtonGroup();
        complexityBG = new javax.swing.ButtonGroup();
        stateBG = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        workOrderItemFinishedJC = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        workOrderItemXDimenTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        workOrderItemYDimenTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        workOrderItemPrintJC = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        woiPrintCheckBox = new javax.swing.JCheckBox();
        woiServiceCheckBox = new javax.swing.JCheckBox();
        woiFinishedCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        workOrderItemServiceJC = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        workOrderItemSimpleComplexityRB = new javax.swing.JRadioButton();
        workOrderItemMediumComplexityRB = new javax.swing.JRadioButton();
        workOrderItemComplexComplexityRB = new javax.swing.JRadioButton();
        noneComplexityRB = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        workOrderItemCalculateBt = new javax.swing.JButton();
        workOrderItemAddBt = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        workOrderItemQuantitySp = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        workOrderItemTotalValueTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        workOrderItemDetailTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Impresi√≥n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Terminado:");

        workOrderItemFinishedJC.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderItemFinishedJC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Sustrato", "Ojales", "Troquelado", "Laminado" }));
        workOrderItemFinishedJC.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Dimensiones:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("x");

        workOrderItemXDimenTxt.setText("0.00");
        workOrderItemXDimenTxt.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("y");

        workOrderItemYDimenTxt.setText("0.00");
        workOrderItemYDimenTxt.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Producto:");

        workOrderItemPrintJC.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderItemPrintJC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Vinil", "Lona", "Microperforado", "Backlight", "Lienzo" }));
        workOrderItemPrintJC.setEnabled(false);
        workOrderItemPrintJC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                workOrderItemPrintJCItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemXDimenTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemYDimenTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(workOrderItemFinishedJC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workOrderItemPrintJC, 0, 477, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(workOrderItemPrintJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(workOrderItemFinishedJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(workOrderItemXDimenTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(workOrderItemYDimenTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Trabajo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        woiPrintCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        woiPrintCheckBox.setText("Impresi√≥n");
        woiPrintCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                woiPrintCheckBoxActionPerformed(evt);
            }
        });
        woiPrintCheckBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                woiPrintCheckBoxPropertyChange(evt);
            }
        });

        woiServiceCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        woiServiceCheckBox.setText("Servicio");
        woiServiceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                woiServiceCheckBoxActionPerformed(evt);
            }
        });
        woiServiceCheckBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                woiServiceCheckBoxPropertyChange(evt);
            }
        });

        woiFinishedCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        woiFinishedCheckBox.setText("Terminado");
        woiFinishedCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                woiFinishedCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(woiPrintCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(woiFinishedCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(woiServiceCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(woiPrintCheckBox)
                    .addComponent(woiServiceCheckBox)
                    .addComponent(woiFinishedCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Servicios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Servicio:");

        workOrderItemServiceJC.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderItemServiceJC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Dise√±o B√°sico", "Dise√±o Afiche", "Dise√±o Logo", " " }));
        workOrderItemServiceJC.setEnabled(false);
        workOrderItemServiceJC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderItemServiceJCActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Complejidad", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        workOrderItemSimpleComplexityRB.setBackground(new java.awt.Color(255, 255, 255));
        complexityBG.add(workOrderItemSimpleComplexityRB);
        workOrderItemSimpleComplexityRB.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderItemSimpleComplexityRB.setText("Simple");
        workOrderItemSimpleComplexityRB.setEnabled(false);

        workOrderItemMediumComplexityRB.setBackground(new java.awt.Color(255, 255, 255));
        complexityBG.add(workOrderItemMediumComplexityRB);
        workOrderItemMediumComplexityRB.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderItemMediumComplexityRB.setSelected(true);
        workOrderItemMediumComplexityRB.setText("Media");
        workOrderItemMediumComplexityRB.setEnabled(false);

        workOrderItemComplexComplexityRB.setBackground(new java.awt.Color(255, 255, 255));
        complexityBG.add(workOrderItemComplexComplexityRB);
        workOrderItemComplexComplexityRB.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderItemComplexComplexityRB.setText("Compleja");
        workOrderItemComplexComplexityRB.setEnabled(false);

        noneComplexityRB.setBackground(new java.awt.Color(255, 255, 255));
        complexityBG.add(noneComplexityRB);
        noneComplexityRB.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        noneComplexityRB.setText("Ninguna");
        noneComplexityRB.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(noneComplexityRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workOrderItemSimpleComplexityRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workOrderItemMediumComplexityRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workOrderItemComplexComplexityRB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderItemSimpleComplexityRB)
                    .addComponent(workOrderItemMediumComplexityRB)
                    .addComponent(workOrderItemComplexComplexityRB)
                    .addComponent(noneComplexityRB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemServiceJC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(workOrderItemServiceJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        workOrderItemCalculateBt.setText("Calcular");
        workOrderItemCalculateBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderItemCalculateBtActionPerformed(evt);
            }
        });

        workOrderItemAddBt.setText("Agregar");
        workOrderItemAddBt.setEnabled(false);
        workOrderItemAddBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderItemAddBtActionPerformed(evt);
            }
        });

        jLabel12.setText("CANTIDAD");

        workOrderItemQuantitySp.setValue(1);

        jLabel8.setText("VALOR:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Descripci√≥n:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemDetailTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemCalculateBt))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 252, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemQuantitySp, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderItemTotalValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(workOrderItemAddBt)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderItemCalculateBt)
                    .addComponent(jLabel13)
                    .addComponent(workOrderItemDetailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(workOrderItemTotalValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(workOrderItemQuantitySp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(workOrderItemAddBt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void workOrderItemCalculateBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderItemCalculateBtActionPerformed
        // TODO add your handling code here:
        totalCalculate();
    }//GEN-LAST:event_workOrderItemCalculateBtActionPerformed

    private void workOrderItemAddBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderItemAddBtActionPerformed
        // TODO add your handling code here:
        if (workOrderItemAddBt.isEnabled()) {
            this.chargeDetailData();
            //Enviamos un servicio a la vista anterior
            this.wo.getWorkItemDetail(this.ds);
            dispose();
        }
    }//GEN-LAST:event_workOrderItemAddBtActionPerformed

    //Cargamos el detalle de la orden de trabajo
    private void chargeDetailData() {
        this.ds.getDetail().setDetDescription(workOrderItemDetailTxt.getText());
        this.ds.getDetail().setDetQuantity(Double.valueOf(workOrderItemQuantitySp.getValue().toString()));
        this.ds.getDetail().setDetSalePrice(Double.valueOf(workOrderItemTotalValueTxt.getText()));
        this.ds.getDetail().setDetTotal(totalValue);
        //this.ds.getDetail().setDetType("WorkOrderDetail");
    }

    private void workOrderItemPrintJCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_workOrderItemPrintJCItemStateChanged
        // TODO add your handling code here:
        //Cargamos el par√°metros generales
    }//GEN-LAST:event_workOrderItemPrintJCItemStateChanged

    private void workOrderItemServiceJCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderItemServiceJCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workOrderItemServiceJCActionPerformed

    private void woiPrintCheckBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_woiPrintCheckBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_woiPrintCheckBoxPropertyChange

    private void woiServiceCheckBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_woiServiceCheckBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_woiServiceCheckBoxPropertyChange

    private void woiServiceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_woiServiceCheckBoxActionPerformed
        // TODO add your handling code here:
        if (woiServiceCheckBox.isSelected()) {
            this.serviceButtonsEnable();
        } else {
            this.serviceButtonsDisable();
        }
    }//GEN-LAST:event_woiServiceCheckBoxActionPerformed

    private void woiPrintCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_woiPrintCheckBoxActionPerformed
        // TODO add your handling code here:
        if (this.woiPrintCheckBox.isSelected()) {
            this.printButtonsEnable();
        } else {
            this.printButtonsDisable();
        }
    }//GEN-LAST:event_woiPrintCheckBoxActionPerformed

    private void woiFinishedCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_woiFinishedCheckBoxActionPerformed
        // TODO add your handling code here:
        if (this.woiFinishedCheckBox.isSelected()) {
            this.finishedButtonEnable();
        } else {
            this.finishedButtonDisable();
        }
    }//GEN-LAST:event_woiFinishedCheckBoxActionPerformed

    //Para deshabilitar los campos de la secci√≥n de terminados
    private void finishedButtonDisable() {
        workOrderItemFinishedJC.setEnabled(false);
        workOrderItemXDimenTxt.setEnabled(false);
        workOrderItemYDimenTxt.setEnabled(false);
    }

    //Para habilitar los campos de la secci√≥n de terminados
    private void finishedButtonEnable() {
        workOrderItemFinishedJC.setEnabled(true);
        workOrderItemXDimenTxt.setEnabled(true);
        workOrderItemYDimenTxt.setEnabled(true);
    }

    //Para deshabilitar los campos de la secci√≥n de servicios
    private void serviceButtonsDisable() {
        workOrderItemServiceJC.setEnabled(false);
        workOrderItemSimpleComplexityRB.setEnabled(false);
        workOrderItemMediumComplexityRB.setEnabled(false);
        workOrderItemComplexComplexityRB.setEnabled(false);
        noneComplexityRB.setEnabled(false);
    }

    //Para habilitar los campos de la secci√≥n de servicios
    private void serviceButtonsEnable() {
        workOrderItemServiceJC.setEnabled(true);
        workOrderItemSimpleComplexityRB.setEnabled(true);
        workOrderItemMediumComplexityRB.setEnabled(true);
        workOrderItemComplexComplexityRB.setEnabled(true);
        noneComplexityRB.setEnabled(true);
    }

    //Para habilitar los campos de la secci√≥n impresi√≥n
    private void printButtonsEnable() {
        workOrderItemPrintJC.setEnabled(true);
        workOrderItemXDimenTxt.setEnabled(true);
        workOrderItemYDimenTxt.setEnabled(true);
    }

    //Para deshabilitar los campos de la secci√≥n de impresi√≥n
    private void printButtonsDisable() {
        workOrderItemPrintJC.setEnabled(false);
        workOrderItemXDimenTxt.setEnabled(false);
        workOrderItemYDimenTxt.setEnabled(false);
    }

    private void totalCalculate() {

        StringBuilder sb = new StringBuilder();
        descriptionText = "";

        if (this.woiPrintCheckBox.isSelected()) {
            //JOptionPane.showMessageDialog(this, "Usted no ha seleccionado ning√∫n producto");
            ProductComboBoxModel pcbmmi = (ProductComboBoxModel) this.workOrderItemPrintJC.getModel();
            materialValue = pcbmmi.getSelectedItem().getPdSalePrice();
            if(personType.equals("Publicista")){
                materialValue -= (pcbmmi.getSelectedItem().getPdSalePrice() * GeneralParameter.PUBLICIST_PRINT_DISCOUNT_VALUE)/100 ;
            }
            miName = pcbmmi.getSelectedItem().getPdName();
            if (descriptionText.isEmpty()) {
                descriptionText = sb.append(miName).append(" ").append(workOrderItemXDimenTxt.getText()).append("x").append(workOrderItemYDimenTxt.getText()).append(" m2").toString();
            } else {
                descriptionText = sb.append(miName).toString();
            }
        } else {
            materialValue = 0.00;
            miName = "";
        }

        if (!this.woiFinishedCheckBox.isSelected()) {
            //JOptionPane.showMessageDialog(this, "Usted no ha seleccionado ning√∫n producto");
            finishedValue = 0.00;
            tName = "";
        } else {
            ProductComboBoxModel pcbmt = (ProductComboBoxModel) this.workOrderItemFinishedJC.getModel();
            finishedValue = pcbmt.getSelectedItem().getPdSalePrice();
            if(personType.equals("Publicista")){
                finishedValue -= (pcbmt.getSelectedItem().getPdSalePrice() * GeneralParameter.PUBLICIST_FINISHED_DISCOUNT_VALUE)/100 ;
            }
            tName = pcbmt.getSelectedItem().getPdName();
            if (descriptionText.isEmpty()) {
                descriptionText = sb.append(tName).append(" ").append(workOrderItemXDimenTxt.getText()).append("x").append(workOrderItemYDimenTxt.getText()).append(" m2").toString();
            } else {
                descriptionText = sb.append(", Terminado: ").append(tName).toString();
            }
        }

        if (!this.woiServiceCheckBox.isSelected()) {
            serviceValue = 0.00;
            sName = "";
        } else {
            ProductComboBoxModel pcbms = (ProductComboBoxModel) this.workOrderItemServiceJC.getModel();
            serviceValue = pcbms.getSelectedItem().getPdSalePrice();
            if(personType.equals("Publicista")){
                serviceValue -= (pcbms.getSelectedItem().getPdSalePrice()*GeneralParameter.PUBLICIST_SERVICE_DISCOUNT_VALUE)/100;
            }
            
            sName = pcbms.getSelectedItem().getPdName();
            if (descriptionText.isEmpty()) {
                descriptionText = sb.append(sName).toString();
            } else {
                descriptionText = sb.append(",").append(" ").append(sName).toString();
            }

            if (workOrderItemSimpleComplexityRB.isSelected()) {
                serviceValue += (serviceValue * GeneralParameter.SIMPLE_SERVICE_VALUE) / 100;
            } else if (workOrderItemMediumComplexityRB.isSelected()) {
                serviceValue += (serviceValue * GeneralParameter.MEDIUM_SERVICE_VALUE) / 100;
            } else if (workOrderItemComplexComplexityRB.isSelected()) {
                serviceValue += (serviceValue * GeneralParameter.COMPLEX_SERVICE_VALUE) / 100;
            }
        }

        totalValue = (((materialValue + finishedValue) * (Double.parseDouble(workOrderItemXDimenTxt.getText()) * Double.parseDouble(workOrderItemYDimenTxt.getText()))) + serviceValue) * Double.valueOf(workOrderItemQuantitySp.getValue().toString());
        //workOrderItemDetailTxt.setText(sb.append(miName).append(" ").append(tName).append(" ").append(workOrderItemXDimenTxt.getText()).append("x").append(workOrderItemYDimenTxt.getText()).toString());
        workOrderItemDetailTxt.setText(descriptionText);
        workOrderItemTotalValueTxt.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(totalValue * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
        workOrderItemAddBt.setEnabled(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup complexityBG;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton noneComplexityRB;
    private javax.swing.ButtonGroup stateBG;
    private javax.swing.JCheckBox woiFinishedCheckBox;
    private javax.swing.JCheckBox woiPrintCheckBox;
    private javax.swing.JCheckBox woiServiceCheckBox;
    private javax.swing.JButton workOrderItemAddBt;
    private javax.swing.JButton workOrderItemCalculateBt;
    private javax.swing.JRadioButton workOrderItemComplexComplexityRB;
    private javax.swing.JTextField workOrderItemDetailTxt;
    private javax.swing.JComboBox workOrderItemFinishedJC;
    private javax.swing.JRadioButton workOrderItemMediumComplexityRB;
    private javax.swing.JComboBox workOrderItemPrintJC;
    private javax.swing.JSpinner workOrderItemQuantitySp;
    private javax.swing.JComboBox workOrderItemServiceJC;
    private javax.swing.JRadioButton workOrderItemSimpleComplexityRB;
    private javax.swing.JTextField workOrderItemTotalValueTxt;
    private javax.swing.JTextField workOrderItemXDimenTxt;
    private javax.swing.JTextField workOrderItemYDimenTxt;
    private javax.swing.ButtonGroup workTypeBG;
    // End of variables declaration//GEN-END:variables
}

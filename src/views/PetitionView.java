package views;

import controller.resources.GeneralParameter;
import controller.resources.Operaciones;
import controller.resources.ValidateEmptyFields;
import controller.service.DetailService;
import controller.service.PersonService;
import controller.service.PetitionService;
import controller.service.ProductService;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.Detail;
import views.tableModel.DetailTableModel;
import views.tableModel.PersonComboBoxModel;
import views.tableModel.ProductComboBoxModel;

public class PetitionView extends javax.swing.JDialog {

    private boolean optionFlagBt;
    private final String orderName;
    private final DetailService ds;
    private final PetitionService pts;
    private final ProductService prs;
    private final PersonService pes;
    private final DetailTableModel dtm;
    private final double accuracyVal;
    private boolean petitionOption;

    private double subtotalIvaTwelve = 0;
    private double subTotalivaZero = 0;
    private double iva = 0;
    private JTextField searchNameText;
    private JTextField searchProductText;

    public PetitionView(java.awt.Frame parent, boolean modal, String orderName) {
        super(parent, modal);
        this.pts = new PetitionService();
        this.prs = new ProductService();
        this.pes = new PersonService();
        this.ds = new DetailService();
        this.dtm = new DetailTableModel();
        this.orderName = orderName;
        this.petitionOption = Boolean.TRUE;
        initComponents();
        this.accuracyVal = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        if (!orderName.equals("freeTable")) {
            chargePetition();
        }
       //petitionTableChange();
        chargeProductComboBox();
        chargePersonComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        petitionSaveBt = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        petitionProductNameText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        petitionRemoveItemBT = new javax.swing.JButton();
        petitionDescriptionTxt = new javax.swing.JTextField();
        petitionAddItemBT = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        petitionPVPproductText = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        petitionProductCodeTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        productComboSearch = new org.jdesktop.swingx.JXComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        orderNumberLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        petitionDateJDC = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        petitionDetailTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        petitionSubTotalText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        petitionDiscountText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        petitionDiscountSpinner = new javax.swing.JSpinner();
        petitionSubtotalIvaZeroText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        petitionSubtotalIvaText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        petitionIvaText = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        petitionTotalText = new javax.swing.JTextField();
        petitionRechargeText = new javax.swing.JTextField();
        orderPayBt = new javax.swing.JButton();
        orderCancelBt = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        personComboSearch = new javax.swing.JComboBox();
        petitionNewClientJB = new javax.swing.JButton();
        petitionEditClientJB = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        petitionPersonJB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        petitionPersonIdentificationJB = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        petitionSaveBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/guardar1.png"))); // NOI18N
        petitionSaveBt.setBorderPainted(false);
        petitionSaveBt.setContentAreaFilled(false);
        petitionSaveBt.setEnabled(false);
        petitionSaveBt.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/guardar2.png"))); // NOI18N
        petitionSaveBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petitionSaveBtActionPerformed(evt);
            }
        });
        jPanel1.add(petitionSaveBt);
        petitionSaveBt.setBounds(220, 550, 133, 55);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel11.setText("P.V.P.:");

        descriptionLabel.setText("Descripción:");

        jLabel10.setText("Dimensiones:");

        jLabel8.setText("Nombre:");

        petitionProductNameText.setEditable(false);

        jButton2.setToolTipText("precios");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        petitionRemoveItemBT.setText("REMOVER ITEM");
        petitionRemoveItemBT.setEnabled(false);
        petitionRemoveItemBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petitionRemoveItemBTActionPerformed(evt);
            }
        });

        petitionDescriptionTxt.setEditable(false);
        petitionDescriptionTxt.setToolTipText("haga clic para ver toda la descripción");
        petitionDescriptionTxt.setPreferredSize(new java.awt.Dimension(280, 20));
        petitionDescriptionTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                petitionDescriptionTxtMouseClicked(evt);
            }
        });

        petitionAddItemBT.setText("AGREGAR");
        petitionAddItemBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petitionAddItemBTActionPerformed(evt);
            }
        });

        jLabel9.setText("Codigo:");

        petitionPVPproductText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionPVPproductText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                petitionPVPproductTextKeyTyped(evt);
            }
        });

        jLabel24.setText("$");

        petitionProductCodeTxt.setEditable(false);

        jLabel1.setText("Buscar Producto:");

        productComboSearch.setEditable(true);
        productComboSearch.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                productComboSearchPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel20.setText("x");

        jLabel21.setText("y");

        jLabel25.setText("Terminados:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sustrato", "Troquelado", "Ojales", "Laminado" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productComboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(descriptionLabel))
                                    .addGap(28, 28, 28))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(27, 27, 27)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(petitionProductNameText)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(petitionPVPproductText, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(petitionProductCodeTxt))
                                    .addComponent(petitionDescriptionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(petitionAddItemBT, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(petitionRemoveItemBT))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(70, 70, 70))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(productComboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(petitionProductNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(petitionPVPproductText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(petitionProductCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionLabel)
                    .addComponent(petitionDescriptionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petitionAddItemBT)
                    .addComponent(petitionRemoveItemBT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(10, 180, 584, 180);

        orderNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderNumberLabel.setText("0000");
        jPanel1.add(orderNumberLabel);
        orderNumberLabel.setBounds(120, 10, 47, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("No. de Orden:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(11, 11, 97, 17);

        jLabel4.setText("Fecha:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(363, 11, 33, 20);

        petitionDateJDC.setDate(new java.util.Date());
        jPanel1.add(petitionDateJDC);
        petitionDateJDC.setBounds(410, 10, 184, 20);

        petitionDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        petitionDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                petitionDetailTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(petitionDetailTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 370, 584, 104);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setText("Sub Total:");

        petitionSubTotalText.setEditable(false);
        petitionSubTotalText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionSubTotalText.setText("0.00");

        jLabel14.setText("Descuento %:");

        petitionDiscountText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionDiscountText.setText("0.00");
        petitionDiscountText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                petitionDiscountTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                petitionDiscountTextKeyTyped(evt);
            }
        });

        jLabel15.setText("Subtotal IVA 0%:");

        petitionDiscountSpinner.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(0.5d)));
        petitionDiscountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                petitionDiscountSpinnerStateChanged(evt);
            }
        });

        petitionSubtotalIvaZeroText.setEditable(false);
        petitionSubtotalIvaZeroText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionSubtotalIvaZeroText.setText("0.00");

        jLabel16.setText("Subtotal IVA 12%:");

        petitionSubtotalIvaText.setEditable(false);
        petitionSubtotalIvaText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionSubtotalIvaText.setText("0.00");

        jLabel17.setText("IVA:");

        petitionIvaText.setEditable(false);
        petitionIvaText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionIvaText.setText("0.00");

        jLabel18.setText("Recargo:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("TOTAL:");

        petitionTotalText.setEditable(false);
        petitionTotalText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        petitionTotalText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionTotalText.setText("0.00");

        petitionRechargeText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        petitionRechargeText.setText("0.00");
        petitionRechargeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                petitionRechargeTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                petitionRechargeTextKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16)
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(petitionSubtotalIvaText)
                    .addComponent(petitionSubtotalIvaZeroText)
                    .addComponent(petitionSubTotalText)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(petitionDiscountSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(petitionDiscountText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(petitionIvaText, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(petitionTotalText)
                    .addComponent(petitionRechargeText, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(petitionSubTotalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(petitionDiscountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petitionDiscountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(petitionSubtotalIvaZeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(petitionSubtotalIvaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(petitionIvaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(petitionRechargeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(petitionTotalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(370, 490, 230, 208);

        orderPayBt.setText("PAGAR");
        orderPayBt.setBorderPainted(false);
        orderPayBt.setContentAreaFilled(false);
        orderPayBt.setEnabled(false);
        orderPayBt.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/cancelar2.png"))); // NOI18N
        orderPayBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderPayBtActionPerformed(evt);
            }
        });
        jPanel1.add(orderPayBt);
        orderPayBt.setBounds(220, 490, 133, 55);

        orderCancelBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/cancelar1.png"))); // NOI18N
        orderCancelBt.setBorderPainted(false);
        orderCancelBt.setContentAreaFilled(false);
        orderCancelBt.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/cancelar2.png"))); // NOI18N
        orderCancelBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCancelBtActionPerformed(evt);
            }
        });
        jPanel1.add(orderCancelBt);
        orderCancelBt.setBounds(220, 610, 133, 55);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jLabel6.setText("Buscar Cliente:");

        personComboSearch.setEditable(true);
        personComboSearch.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        personComboSearch.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                personComboSearchPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        petitionNewClientJB.setText("Nuevo Cliente");
        petitionNewClientJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petitionNewClientJBActionPerformed(evt);
            }
        });

        petitionEditClientJB.setText("Editar Cliente");
        petitionEditClientJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petitionEditClientJBActionPerformed(evt);
            }
        });

        jLabel3.setText("NOMBRES - APELLIDOS");

        jLabel7.setText("CÉDULA");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(personComboSearch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(petitionNewClientJB))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(150, 150, 150))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(petitionPersonJB, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(petitionPersonIdentificationJB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(petitionEditClientJB)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(personComboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petitionNewClientJB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(petitionPersonJB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(petitionPersonIdentificationJB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(petitionEditClientJB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel1.add(jPanel8);
        jPanel8.setBounds(10, 50, 584, 120);

        jLabel22.setText("Prioridad:");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(170, 10, 60, 14);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Baja", "Media", "Alta" }));
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(240, 10, 80, 20);

        jLabel23.setText("Responsable:");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(10, 500, 70, 14);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Responsable 1", "Responsable 2", "Responsable 3" }));
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(80, 500, 110, 20);

        jLabel2.setText("Total:");

        jLabel12.setText("Abono:");

        jLabel26.setText("Saldo:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField5)
                            .addComponent(jTextField4))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 530, 180, 100);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void petitionSaveBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petitionSaveBtActionPerformed
        // TODO add your handling code here:
        if (ValidateEmptyFields.requerido(petitionPersonJB, petitionPersonJB.getText())) {
            if (this.pts.getPetition().getPetitionId() == null) {
                this.chargePetitionData();
                System.out.println("EL PEDIDO ES NUEVO");
                if (this.pts.savePetition()) {
                    this.updateStock();
                    JOptionPane.showMessageDialog(this, "PEDIDO GUARDADO CORRECTAMENTE");
                    setOptionFlagBt(true);
                    this.closeWindow();

                }

            } else if (this.pts.getPetition().getPetitionId() != null) {
                this.chargePetitionData();
                //this.petitionChanges();
                if (this.pts.updatePetition()) {
                    this.updateStock();
                    JOptionPane.showMessageDialog(this, "PEDIDO MODIFICADO CORRECTAMENTE");
                    setOptionFlagBt(true);
                    this.closeWindow();
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "NO HA ASIGNADO NINGÚN CLIENTE");
        }
    }//GEN-LAST:event_petitionSaveBtActionPerformed

    //Método encargado de cerrar todos los procesos de un JDialog
    private void closeWindow() {
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    private void chargeProductComboBox() {
        searchProductText = (JTextField) productComboSearch.getComponent(2);
        searchProductText.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == 27) {
                    productComboSearch.setPopupVisible(false);
                    return;
                }
                if (evt.getKeyCode() == 10) {
                    if (productComboSearch.getSelectedIndex() != - 1) {
                        ProductComboBoxModel pcm = (ProductComboBoxModel) productComboSearch.getModel();
                        prs.setInstance(pcm.getSelectedItem());
                        chargeProductView();
                    }
                    productComboSearch.setPopupVisible(false);
                    return;
                }

                if (evt.getKeyCode() == 40 || evt.getKeyCode() == 39 || evt.getKeyCode() == 38 || evt.getKeyCode() == 37
                        || evt.getKeyCode() == 36 || evt.getKeyCode() == 16 || evt.getKeyCode() == 35) {
                    return;
                }

                int position = searchProductText.getCaretPosition();
                String s = searchProductText.getText();
                productComboSearch.setModel(new ProductComboBoxModel(prs.getProductsByCriteria(searchProductText.getText())));
                searchProductText.setText(s);

                searchProductText.setCaretPosition(position);
                productComboSearch.setPopupVisible(true);
            }
        });
    }

    private void chargePersonComboBox() {
        searchNameText = (JTextField) personComboSearch.getComponent(2);
        searchNameText.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == 27) {
                    personComboSearch.setPopupVisible(false);
                    return;
                }
                if (evt.getKeyCode() == 10) {
                    if (personComboSearch.getSelectedIndex() != - 1) {
                        PersonComboBoxModel pcm = (PersonComboBoxModel) personComboSearch.getModel();
                        pes.setInstance(pcm.getSelectedItem());
                        chargePersonView();
                    }
                    personComboSearch.setPopupVisible(false);
                    return;
                }

                if (evt.getKeyCode() == 40 || evt.getKeyCode() == 39 || evt.getKeyCode() == 38 || evt.getKeyCode() == 37
                        || evt.getKeyCode() == 36 || evt.getKeyCode() == 16 || evt.getKeyCode() == 35) {
                    return;
                }

                int position = searchNameText.getCaretPosition();
                String s = searchNameText.getText();
                personComboSearch.setModel(new PersonComboBoxModel(pes.getPersonsByCriteria(searchNameText.getText())));
                searchNameText.setText(s);

                searchNameText.setCaretPosition(position);
                personComboSearch.setPopupVisible(true);
            }
        });
    }

    private void chargeProductView() {
        this.petitionProductNameText.setText(this.prs.getProduct().getPdName());
        this.petitionPVPproductText.setText("" + this.prs.getProduct().getPdSalePrice());
        this.petitionDescriptionTxt.setText(this.prs.getProduct().getPdDescription());
        this.petitionProductCodeTxt.setText(this.prs.getProduct().getPdCode());
        //this.petitionStockLabel.setText("" + this.prs.getProduct().getPdStock());
    }

    private void chargePersonView() {
        this.petitionPersonJB.setText(this.pes.getPerson().toString());
        this.petitionPersonIdentificationJB.setText(this.pes.getPerson().getPrIdentification());
        if (orderName.equals("freeTable")) {
            this.chargePetitionByPerson();
        }
    }

    private void chargePetitionByPerson() {
        if (this.pes.getPerson() != null) {
            this.pts.setInstance(this.pts.getPetitionPerson(this.pes.getPerson().getPersonId()));

            if (!this.pts.getPetition().getDetailList().isEmpty()) {
                this.orderPayBt.setEnabled(true);

                this.ds.setDetailList(this.pts.getPetition().getDetailList());//Fijamos la lista obtenida del modelo de la tabla al servicio detalle

                this.dtm.setList(this.ds.getDetailList());
                this.petitionDetailTable.setModel(dtm);

                this.petitionDetailTable.getColumnModel().getColumn(1).setPreferredWidth(310);
                this.petitionDetailTable.getColumnModel().getColumn(2).setCellRenderer(Operaciones.getRenderCellToRigth());
                this.petitionDetailTable.getColumnModel().getColumn(3).setCellRenderer(Operaciones.getRenderCellToRigth());
                this.petitionDetailTable.updateUI();
                //searchPetitionNoteLabel.setText("EL CLIENTE TIENE UN ANTICIPO DE: " + tempFacture.getTotalFacture() + " USD" + ", EL SALDO A CANCELAR ES DE: " + tempFacture.getTotalFacture() + " USD.");
                this.totalPetitionCalculate();
                petitionRemoveItemBT.setEnabled(Boolean.TRUE);
                petitionSaveBt.setEnabled(Boolean.TRUE);
            }

        }
    }

//    private void petitionTableChange() {
//        switch (orderName) {
//            case "petitionOne":
//                deskNumberCombo.setSelectedItem("MESA 01");
//                break;
//            case "petitionTwo":
//                deskNumberCombo.setSelectedItem("MESA 02");
//                break;
//            case "petitionThree":
//                deskNumberCombo.setSelectedItem("MESA 03");
//                break;
//            case "petitionFour":
//                deskNumberCombo.setSelectedItem("MESA 04");
//                break;
//            case "petitionFive":
//                deskNumberCombo.setSelectedItem("MESA 05");
//                break;
//            case "petitionSix":
//                deskNumberCombo.setSelectedItem("MESA 06");
//                break;
//            case "petitionSeven":
//                deskNumberCombo.setSelectedItem("MESA 07");
//                break;
//            case "petitionEight":
//                deskNumberCombo.setSelectedItem("MESA 08");
//                break;
//            case "petitionNine":
//                deskNumberCombo.setSelectedItem("MESA 09");
//                break;
//            case "petitionTen":
//                deskNumberCombo.setSelectedItem("MESA 10");
//                break;
//            case "petitionEleven":
//                deskNumberCombo.setSelectedItem("MESA 11");
//                break;
//            case "petitionTwelve":
//                deskNumberCombo.setSelectedItem("MESA 12");
//                break;
//            case "petitionThirdteen":
//                deskNumberCombo.setSelectedItem("MESA 13");
//                break;
//            case "petitionFourteen":
//                deskNumberCombo.setSelectedItem("MESA 14");
//                break;
//            case "petitionFifteen":
//                deskNumberCombo.setSelectedItem("MESA 15");
//                break;
//            case "petitionSixteen":
//                deskNumberCombo.setSelectedItem("MESA 16");
//                break;
//            case "petitionSeventeen":
//                deskNumberCombo.setSelectedItem("MESA 17");
//                break;
//            case "petitionEightteen":
//                deskNumberCombo.setSelectedItem("MESA 18");
//                break;
//            case "freeTable":
//                deskNumberCombo.setSelectedItem("MESA LIBRE");
//                break;
//        }
//    }

//    private void petitionTableChangeData() {
//        switch (String.valueOf(deskNumberCombo.getSelectedItem())) {
//            case "MESA 01":
//                this.pts.getPetition().setPtName("petitionOne");
//                break;
//            case "MESA 02":
//                this.pts.getPetition().setPtName("petitionTwo");
//                break;
//            case "MESA 03":
//                this.pts.getPetition().setPtName("petitionThree");
//                break;
//            case "MESA 04":
//                this.pts.getPetition().setPtName("petitionFour");
//                break;
//            case "MESA 05":
//                this.pts.getPetition().setPtName("petitionFive");
//                break;
//            case "MESA 06":
//                this.pts.getPetition().setPtName("petitionSix");
//                break;
//            case "MESA 07":
//                this.pts.getPetition().setPtName("petitionSeven");
//                break;
//            case "MESA 08":
//                this.pts.getPetition().setPtName("petitionEight");
//                break;
//            case "MESA 09":
//                this.pts.getPetition().setPtName("petitionNine");
//                break;
//            case "MESA 10":
//                this.pts.getPetition().setPtName("petitionTen");
//                break;
//            case "MESA 11":
//                this.pts.getPetition().setPtName("petitionEleven");
//                break;
//            case "MESA 12":
//                this.pts.getPetition().setPtName("petitionTwelve");
//                break;
//            case "MESA 13":
//                this.pts.getPetition().setPtName("petitionThirdteen");
//                break;
//            case "MESA 14":
//                this.pts.getPetition().setPtName("petitionFourteen");
//                break;
//            case "MESA 15":
//                this.pts.getPetition().setPtName("petitionFifteen");
//                break;
//            case "MESA 16":
//                this.pts.getPetition().setPtName("petitionSixteen");
//                break;
//            case "MESA 17":
//                this.pts.getPetition().setPtName("petitionSeventeen");
//                break;
//            case "MESA 18":
//                this.pts.getPetition().setPtName("petitionEightteen");
//                break;
//            case "MESA LIBRE":
//                this.pts.getPetition().setPtName("freeTable");
//                break;
//        }
//    }

    private void chargePetition() {
        this.petitionOption = Boolean.FALSE;
        this.pts.setInstance(this.pts.getPetitionPerName(orderName));//Fijamos la instancia de un pedido de acuerdo a su nombre

        if (!this.pts.getPetition().getDetailList().isEmpty()) {
            this.orderPayBt.setEnabled(true);
            //petitionTableChange();
            this.pes.setInstance(this.pts.getPetition().getPerson());//Fijamos una instancia del objeto persona

            this.chargePersonView();

            this.ds.setDetailList(this.pts.getPetition().getDetailList());//Fijamos la lista obtenida del modelo de la tabla al servicio detalle

            this.dtm.setList(this.ds.getDetailList());
            this.petitionDetailTable.setModel(dtm);

            this.petitionDetailTable.getColumnModel().getColumn(1).setPreferredWidth(310);
            this.petitionDetailTable.getColumnModel().getColumn(2).setCellRenderer(Operaciones.getRenderCellToRigth());
            this.petitionDetailTable.getColumnModel().getColumn(3).setCellRenderer(Operaciones.getRenderCellToRigth());
            this.petitionDetailTable.updateUI();
            //searchPetitionNoteLabel.setText("EL CLIENTE TIENE UN ANTICIPO DE: " + tempFacture.getTotalFacture() + " USD" + ", EL SALDO A CANCELAR ES DE: " + tempFacture.getTotalFacture() + " USD.");
            this.totalPetitionCalculate();
            petitionRemoveItemBT.setEnabled(Boolean.TRUE);
            petitionSaveBt.setEnabled(Boolean.TRUE);
        }
    }

    private void chargePetitionData() {
        System.out.println(" aqu entro cuando es nuevo");
        //this.pts.getPetition().setPtName(this.orderName);
        //petitionTableChangeData();
        this.pts.getPetition().setPtIssueDate(this.petitionDateJDC.getDate());
        this.pts.getPetition().setPtState(Boolean.TRUE);
        this.pts.getPetition().setPtTotal(Double.parseDouble(this.petitionTotalText.getText()));
        this.pts.getPetition().setDetailList(this.ds.getDetailList());//Fijamos el detalle al pedido para poder persistir el pedido completo
        this.pts.getPetition().setPerson(this.pes.getPerson());
    }

    private void updateStock() {
        for (int i = 0; i < this.ds.getDetailList().size(); i++) {
            if (this.prs.getProduct().getProductId() != null) {//Mientras exista una instancia del producto actualizamos el stock.
                this.prs.updateProduct();
            }
        }
    }

    private void addDetail() {
        Double salePrice;
        this.ds.getDetail().setDetType("petitionDetail");
        this.ds.getDetail().setDetDescription(this.petitionProductNameText.getText());
        if (this.prs.getProduct().getPdIvaState() == 1) {//Si el producto tiene iva se desglosa del precio de venta
            salePrice = Double.parseDouble(this.petitionPVPproductText.getText()) / GeneralParameter.IVA_VALUE;//Poner como parametro el valor de iva para que cambie automaticamente
        } else {
            salePrice = Double.parseDouble(this.petitionPVPproductText.getText());
        }
        this.ds.getDetail().setDetSalePrice(salePrice);
        //this.ds.getDetail().setDetQuantity(Double.parseDouble(String.valueOf(this.petitionQuantitySp.getValue())));
        this.ds.getDetail().setDetTotal(this.ds.getDetail().getDetQuantity() * this.ds.getDetail().getDetSalePrice());

        this.ds.getDetail().setProduct(this.prs.getProduct());
        //Para asociar el pedido con el detalle cuando existe un pedido pendiente
        this.ds.getDetail().setPetition(this.pts.getPetition());

    }

    private void totalPetitionCalculate() {
        for (int i = 0; i < this.ds.getDetailList().size(); i++) {
            if (this.ds.getDetailList().get(i).getProduct().getPdIvaState() == 1) {
                subtotalIvaTwelve += this.ds.getDetailList().get(i).getDetSalePrice() * this.ds.getDetailList().get(i).getDetQuantity();
            } else {
                subTotalivaZero += this.ds.getDetailList().get(i).getDetSalePrice() * this.ds.getDetailList().get(i).getDetQuantity();
            }
        }
        iva = subtotalIvaTwelve * (GeneralParameter.IVA_VALUE - 1);

        double totalVenta = subTotalivaZero + subtotalIvaTwelve + iva;
        this.petitionSubTotalText.setText(Operaciones.parteDecimal(Math.rint((subtotalIvaTwelve + subTotalivaZero) * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionSubtotalIvaZeroText.setText(Operaciones.parteDecimal(Math.rint(subTotalivaZero * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionSubtotalIvaText.setText(Operaciones.parteDecimal(Math.rint(subtotalIvaTwelve * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionIvaText.setText(Operaciones.parteDecimal(Math.rint(iva * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionTotalText.setText(Operaciones.parteDecimal(Math.rint(totalVenta * 100) / 100, GeneralParameter.ACCURACY_VALUE));
    }

    private void totalCalculate() {

        if (this.prs.getProduct().getPdIvaState() == 1) {
            //subtotalIvaTwelve += (this.prs.getProduct().getPdSalePrice() / GeneralParameter.IVA_VALUE) * Double.parseDouble(String.valueOf(petitionQuantitySp.getValue()));
            iva = subtotalIvaTwelve * (GeneralParameter.IVA_VALUE - 1);
        } else {
           // subTotalivaZero += this.prs.getProduct().getPdSalePrice() * Double.parseDouble(String.valueOf(petitionQuantitySp.getValue()));
            if (subtotalIvaTwelve == 0) {
                iva = 0;
            }
        }

        double totalVenta = subTotalivaZero + subtotalIvaTwelve + iva;
        this.petitionSubTotalText.setText(Operaciones.parteDecimal(Math.rint((subtotalIvaTwelve + subTotalivaZero) * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionSubtotalIvaZeroText.setText(Operaciones.parteDecimal(Math.rint(subTotalivaZero * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionSubtotalIvaText.setText(Operaciones.parteDecimal(Math.rint(subtotalIvaTwelve * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionIvaText.setText(Operaciones.parteDecimal(Math.rint(iva * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
        this.petitionTotalText.setText(Operaciones.parteDecimal(Math.rint(totalVenta * 100) / 100, GeneralParameter.ACCURACY_VALUE));
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        if (productActual != null) {
//            precios.setModel(new PriceTableModel(productActual.getProductsPrice()));
//            precios.getColumnModel().getColumn(1).setPreferredWidth(250);
//            preciosPopup.show(orderPVPproductText, orderPVPproductText.getX(), orderPVPproductText.getY());
//        } else {
//            javax.swing.JOptionPane.showMessageDialog(null, "Sin producto", "PIRAMIHEAD", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void petitionRemoveItemBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petitionRemoveItemBTActionPerformed
//        if (petitionDetailTable.getSelectedRow() >= 0) {
//            if (Double.parseDouble(String.valueOf(petitionQuantitySp.getValue())) > this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetQuantity()) {
//                JOptionPane.showMessageDialog(this, "Ingrese una cantidad inferior al detalle", "Error", JOptionPane.ERROR_MESSAGE);
//                return;
//            }
//
//            if (this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getProduct().getPdIvaState().equals(1)) {
//                subtotalIvaTwelve -= this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetSalePrice() * Double.parseDouble(String.valueOf(petitionQuantitySp.getValue()));
//            } else {
//                subTotalivaZero -= this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetSalePrice() * Double.parseDouble(String.valueOf(petitionQuantitySp.getValue()));
//            }
//
//            iva = subtotalIvaTwelve * (GeneralParameter.IVA_VALUE - 1);
//
//            double totalVenta = subTotalivaZero + subtotalIvaTwelve + iva;
//            this.petitionSubTotalText.setText(Operaciones.parteDecimal(Math.rint((subtotalIvaTwelve + subTotalivaZero) * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
//            this.petitionSubtotalIvaZeroText.setText(Operaciones.parteDecimal(Math.rint(subTotalivaZero * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
//            this.petitionSubtotalIvaText.setText(Operaciones.parteDecimal(Math.rint(subtotalIvaTwelve * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
//            this.petitionIvaText.setText(Operaciones.parteDecimal(Math.rint(iva * accuracyVal) / accuracyVal, GeneralParameter.ACCURACY_VALUE));
//            this.petitionTotalText.setText(Operaciones.parteDecimal(Math.rint(totalVenta * 100) / 100, GeneralParameter.ACCURACY_VALUE));
//
//            if (Double.parseDouble(String.valueOf(petitionQuantitySp.getValue())) == this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetQuantity()) {
//
//                //---------> Método uno para eliminar el detalle del pedido
//                this.ds.setIntance(this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()));
//
//                if (this.ds.getDetail().getDetailId() == null) {
//                    System.out.println("CUANDO EL DETALLE ES NUEVO " + this.ds.getDetail().getDetailId());
//                    this.ds.getDetailList().remove(petitionDetailTable.getSelectedRow());
//                    this.prs.getProduct().setPdStock(this.prs.getProduct().getPdStock() + Double.parseDouble(String.valueOf(petitionQuantitySp.getValue())));
//                    petitionStockLabel.setText(String.valueOf(this.prs.getProduct().getPdStock()));
//                } else {
//                    if (this.ds.removeDetail()) {
//                        System.out.println("ELIMINA BASE DE DATOS " + this.ds.getDetail().getDetailId());
//                        this.pts.getPetition().getDetailList().remove(petitionDetailTable.getSelectedRow());
//                        this.prs.getProduct().setPdStock(this.prs.getProduct().getPdStock() + Double.parseDouble(String.valueOf(petitionQuantitySp.getValue())));
//                        petitionStockLabel.setText(String.valueOf(this.prs.getProduct().getPdStock()));
//                        this.pts.updatePetition();
//                    } else {
//                        System.out.println("NO PASO NADA");
//                    }
//                }
//            } else {
//                double quantity = this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetQuantity();
//                this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).setDetQuantity(quantity - Double.parseDouble(String.valueOf(petitionQuantitySp.getValue())));
//                this.prs.getProduct().setPdStock(this.prs.getProduct().getPdStock() + Double.parseDouble(String.valueOf(petitionQuantitySp.getValue())));
//                petitionStockLabel.setText(String.valueOf(this.prs.getProduct().getPdStock()));
//                quantity = this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetQuantity();
//                this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).setDetTotal(quantity * this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getDetSalePrice());
//            }
//            if (this.ds.getDetailList().isEmpty()) {
//                petitionRemoveItemBT.setEnabled(Boolean.FALSE);
//                petitionSaveBt.setEnabled(Boolean.FALSE);
//            }
//            //calcularDescuento();
//            this.updatePetitionDetailTable();
//        } else {
//            JOptionPane.showMessageDialog(this, "Escoja una fila", "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_petitionRemoveItemBTActionPerformed

    private void petitionDescriptionTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petitionDescriptionTxtMouseClicked
//        if (!orderDescriptionText.getText().trim().equals("")) {
//            new GestorV((JFrame) this.getParent(), true, 4, orderDescriptionText.getText()).setVisible(true);
//        }
    }//GEN-LAST:event_petitionDescriptionTxtMouseClicked

    private void petitionChanges() {

        //petition.setTipoPetition("RESTAURANT");
        //petition.setDatePetition(datePetitionChooser.getDate());
        //petition.setTotal(Double.parseDouble(totalTextLabel.getText()));
        this.pts.getPetition().setPtIssueDate(petitionDateJDC.getDate());
        this.pts.getPetition().setPtName("petitionThree");
        this.pts.getPetition().setPerson(this.pes.getPerson());
        this.pts.getPetition().setPtTotal(Double.valueOf(petitionTotalText.getText()));

        if (this.pts.getPetition().getPetitionId() != null) {
            this.pts.getPetition().setDetailList(new ArrayList<Detail>());
            this.pts.updatePetition();
            //uccpetition.updatePetition(getPetition());
        }
        this.pts.getPetition().setDetailList(this.ds.getItemsFactureToPetition(this.ds.getDetailList(), this.pts.getPetition(), prs));

        //petition.setItemsFacture(uccfacture.getItemsFactureToPetition(itemsFacture, petition, productos));
    }
    private void petitionAddItemBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petitionAddItemBTActionPerformed

//        if (prs.getProduct().getProductId() != null) {
//            if (this.prs.getProduct().getPdStock() < Double.parseDouble(String.valueOf(this.petitionQuantitySp.getValue()))) {
//                JOptionPane.showMessageDialog(this, "Producto sin stock");
//            } else {
//                if (!isAdded()) {
//                    this.addDetail();
//                    this.prs.getProduct().setPdStock(this.prs.getProduct().getPdStock() - Double.parseDouble(String.valueOf(this.petitionQuantitySp.getValue())));
//                    this.petitionStockLabel.setText(String.valueOf(this.prs.getProduct().getPdStock()));
//                    this.ds.addDetailList(this.ds.getDetail());
//                }
//                this.updatePetitionDetailTable();
//                this.totalCalculate();
//                petitionRemoveItemBT.setEnabled(Boolean.TRUE);
//                petitionSaveBt.setEnabled(Boolean.TRUE);
//            }
//        } else {
//            JOptionPane.showMessageDialog(this, "No ha asignado ningún producto");
//        }
    }//GEN-LAST:event_petitionAddItemBTActionPerformed

    private void updatePetitionDetailTable() {
        this.dtm.setList(this.ds.getDetailList());
        this.petitionDetailTable.setModel(this.dtm);
        this.petitionDetailTable.updateUI();
    }

//    private boolean isAdded() {
//        for (int i = 0; i < this.ds.getDetailList().size(); i++) {
//            if (Objects.equals(this.prs.getProduct().getProductId(), this.ds.getDetailList().get(i).getProduct().getProductId())) {
//                this.ds.getDetailList().get(i).setDetQuantity(this.ds.getDetailList().get(i).getDetQuantity() + Double.parseDouble(String.valueOf(this.petitionQuantitySp.getValue())));
//                this.ds.getDetailList().get(i).setDetTotal(this.ds.getDetailList().get(i).getDetQuantity() * this.ds.getDetailList().get(i).getDetSalePrice());
//                //Método para reducir el stock
//                this.prs.getProduct().setPdStock(this.prs.getProduct().getPdStock() - Double.parseDouble(String.valueOf(this.petitionQuantitySp.getValue())));
//                this.petitionStockLabel.setText(String.valueOf(this.prs.getProduct().getPdStock()));
//                return Boolean.TRUE;
//            }
//        }
//        return Boolean.FALSE;
//    }

    private void petitionPVPproductTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_petitionPVPproductTextKeyTyped
//        Operaciones.soloNumerosDecimales(evt, orderPVPproductText.getText());
    }//GEN-LAST:event_petitionPVPproductTextKeyTyped

    private void petitionDiscountTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_petitionDiscountTextKeyTyped
//        Operaciones.soloNumerosDecimales(evt, orderDiscountText.getText());
    }//GEN-LAST:event_petitionDiscountTextKeyTyped

    private void petitionDiscountTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_petitionDiscountTextKeyReleased
//        try {
//            disc = false;
//            double descuentoS = Double.parseDouble(orderDiscountText.getText());
//            descuentoS = (descuentoS * 100) / (ivaZeroD + ivaPercentD);
//
//            double ivaZeroFijar = ivaZeroD - (ivaZeroD * (descuentoS / 100));
//            double ivaPercentFijar = ivaPercentD - (ivaPercentD * (descuentoS / 100));
//            double ivaFijar = ivaPercentFijar * (salePrice - 1);
//            double subT = ivaZeroFijar + ivaPercentFijar;
//            double total = ivaZeroFijar + ivaPercentFijar + ivaFijar;
//
//            orderSubTotalText.setText(Operaciones.parteDecimal(Math.rint(subT * auxTot) / auxTot, precision));
//            orderIvaZeroText.setText(Operaciones.parteDecimal(Math.rint(ivaZeroFijar * auxTot) / auxTot, precision));
//            orderIvaPercentText.setText(Operaciones.parteDecimal(Math.rint(ivaPercentFijar * auxTot) / auxTot, precision));
//            orderIvaText.setText(Operaciones.parteDecimal(Math.rint(ivaFijar * auxTot) / auxTot, precision));
//            //discountText.setText(Operaciones.parteDecimal(Math.rint(discount * auxTot) / auxTot, precision));
//            totalTextLabel.setText(Operaciones.parteDecimal(Math.rint(total * auxTot) / auxTot, 2));
//
//            orderDiscountSpinner.setValue(Math.rint(descuentoS * auxTot) / auxTot);
//        } catch (NumberFormatException ne) {
//        }
    }//GEN-LAST:event_petitionDiscountTextKeyReleased

    private void petitionDiscountSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_petitionDiscountSpinnerStateChanged
//        if (disc) {
//            double descuentoS = Double.parseDouble(orderDiscountSpinner.getValue().toString());
//            double ivaZeroFijar = ivaZeroD - (ivaZeroD * (descuentoS / 100));
//            //            double ivaPercentFijar = (ivaPercentD+ivaD)-((ivaPercentD+ivaD) * (descuentoS / 100));
//            double ivaPercentFijar = ivaPercentD - (ivaPercentD * (descuentoS / 100));
//            //double ivaFijar = ivaPercentFijar * (salePrice - 1);
//            double ivaFijar = ivaPercentFijar * (salePrice - 1);
//            double subT = ivaZeroFijar + ivaPercentFijar;
//            double discount = (ivaZeroD + ivaPercentD) * (descuentoS / 100);
//            double total = ivaZeroFijar + ivaPercentFijar + ivaFijar;
//
//            orderSubTotalText.setText(Operaciones.parteDecimal(Math.rint(subT * auxTot) / auxTot, precision));
//            orderIvaZeroText.setText(Operaciones.parteDecimal(Math.rint(ivaZeroFijar * auxTot) / auxTot, precision));
//            orderIvaPercentText.setText(Operaciones.parteDecimal(Math.rint(ivaPercentFijar * auxTot) / auxTot, precision));
//            orderIvaText.setText(Operaciones.parteDecimal(Math.rint(ivaFijar * auxTot) / auxTot, precision));
//            orderDiscountText.setText(Operaciones.parteDecimal(Math.rint(discount * auxTot) / auxTot, precision));
//            totalTextLabel.setText(Operaciones.parteDecimal(Math.rint(total * auxTot) / auxTot, 2));
//        } else {
//            disc = true;
//        }
    }//GEN-LAST:event_petitionDiscountSpinnerStateChanged

    private void petitionRechargeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_petitionRechargeTextKeyReleased
//        try {
//            double totRechar = totalFlotable + Double.parseDouble(orderRechargeText.getText());
//            totalTextLabel.setText(Operaciones.parteDecimal(Math.rint(totRechar * 100) / 100, precision));
//        } catch (Exception ex) {
//        }
    }//GEN-LAST:event_petitionRechargeTextKeyReleased

    private void petitionRechargeTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_petitionRechargeTextKeyTyped
//        Operaciones.soloNumerosDecimales(evt, orderRechargeText.getText());
    }//GEN-LAST:event_petitionRechargeTextKeyTyped

    private void orderPayBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderPayBtActionPerformed
        // TODO add your handling code here:         
        if (petitionDetailTable.getModel().getRowCount() > 0) {
            if (this.pts.getPetition() != null) {
                InvoiceView iv = new InvoiceView(null, true, 2, orderName);
                iv.chargePetition(this.pts);
                iv.setVisible(Boolean.TRUE);
                setOptionFlagBt(false);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sin datos en el pedido");
        }
        this.closeWindow();
    }//GEN-LAST:event_orderPayBtActionPerformed

    private void orderCancelBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCancelBtActionPerformed
        // TODO add your handling code here:
        if (this.ds.getDetailList().isEmpty()) {
            setOptionFlagBt(false);
        } else {
            setOptionFlagBt(true);
        }
        this.closeWindow();
    }//GEN-LAST:event_orderCancelBtActionPerformed

    private void productComboSearchPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_productComboSearchPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        ProductComboBoxModel pcbm = (ProductComboBoxModel) productComboSearch.getModel();
        this.prs.setInstance(pcbm.getSelectedItem());
        if (this.prs.getProduct() != null) {
            chargeProductView();
        }
    }//GEN-LAST:event_productComboSearchPopupMenuWillBecomeInvisible

    private void personComboSearchPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_personComboSearchPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        PersonComboBoxModel prcbm = (PersonComboBoxModel) personComboSearch.getModel();
        this.pes.setInstance(prcbm.getSelectedItem());
        if (this.pes.getPerson() != null) {
            chargePersonView();
        }
    }//GEN-LAST:event_personComboSearchPopupMenuWillBecomeInvisible

    private void petitionDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_petitionDetailTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.prs.setInstance(this.ds.getDetailList().get(petitionDetailTable.getSelectedRow()).getProduct());
            this.chargeProductView();
        }
    }//GEN-LAST:event_petitionDetailTableMouseClicked

    private void petitionNewClientJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petitionNewClientJBActionPerformed
        // TODO add your handling code here:
        new PersonView(null, Boolean.TRUE, 1).setVisible(Boolean.TRUE);
    }//GEN-LAST:event_petitionNewClientJBActionPerformed

    private void petitionEditClientJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petitionEditClientJBActionPerformed
        // TODO add your handling code here:
        //Comprobamos si tenemos instanciado el objeto persona para poderlo editar
        if (this.pes.getPerson().getPersonId() != null) {
            new PersonView(null, true, 2, this.pes).setVisible(true);
            this.chargePersonView();
        } else {
            JOptionPane.showMessageDialog(personComboSearch, "NO HA ELEGIDO CLIENTE");
        }
    }//GEN-LAST:event_petitionEditClientJBActionPerformed

//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Frm_FacturaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Frm_FacturaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Frm_FacturaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Frm_FacturaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(() -> {
//            PetitionView dialog = new PetitionView(null, true, "petitionOne");
//            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                @Override
//                public void windowClosing(java.awt.event.WindowEvent e) {
//                    System.exit(0);
//                }
//            });
//            dialog.setVisible(true);
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    public javax.swing.JButton orderCancelBt;
    public javax.swing.JLabel orderNumberLabel;
    public javax.swing.JButton orderPayBt;
    private javax.swing.JComboBox personComboSearch;
    private javax.swing.JButton petitionAddItemBT;
    public com.toedter.calendar.JDateChooser petitionDateJDC;
    public javax.swing.JTextField petitionDescriptionTxt;
    public javax.swing.JTable petitionDetailTable;
    public javax.swing.JSpinner petitionDiscountSpinner;
    public javax.swing.JTextField petitionDiscountText;
    private javax.swing.JButton petitionEditClientJB;
    public javax.swing.JTextField petitionIvaText;
    private javax.swing.JButton petitionNewClientJB;
    public javax.swing.JTextField petitionPVPproductText;
    private javax.swing.JTextField petitionPersonIdentificationJB;
    private javax.swing.JTextField petitionPersonJB;
    public javax.swing.JTextField petitionProductCodeTxt;
    public javax.swing.JTextField petitionProductNameText;
    public javax.swing.JTextField petitionRechargeText;
    private javax.swing.JButton petitionRemoveItemBT;
    public javax.swing.JButton petitionSaveBt;
    public javax.swing.JTextField petitionSubTotalText;
    public javax.swing.JTextField petitionSubtotalIvaText;
    public javax.swing.JTextField petitionSubtotalIvaZeroText;
    public javax.swing.JTextField petitionTotalText;
    private org.jdesktop.swingx.JXComboBox productComboSearch;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the optionFlagBt
     */
    public boolean isOptionFlagBt() {
        return optionFlagBt;
    }

    /**
     * @param optionFlagBt the optionFlagBt to set
     */
    public void setOptionFlagBt(boolean optionFlagBt) {
        this.optionFlagBt = optionFlagBt;
    }
}

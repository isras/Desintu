package views;

import controller.resources.GeneralParameter;
import controller.resources.Operaciones;
import controller.resources.Report;
import controller.service.DetailService;
import controller.service.EmployeeService;
import controller.service.PersonService;
import controller.service.QuotationService;
import controller.service.SettingService;
import controller.service.WorkOrderService;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import views.tableModel.DetailTableModel;
import views.tableModel.EmployeeComboBoxModel;
import views.tableModel.PersonComboBoxModel;

public class WorkOrderView extends javax.swing.JDialog {

    private final DetailService ds;
    private final PersonService pns;
    private final WorkOrderService wos;
    private final DetailTableModel dtm;
    private final EmployeeService employeeService;
    private final QuotationService quotationService;
    private final SettingService settingService;
    private JTextField searchNameText;
    private final Double auxTot;

    public WorkOrderView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.ds = new DetailService();
        this.pns = new PersonService();
        this.wos = new WorkOrderService();
        this.dtm = new DetailTableModel();
        this.employeeService = new EmployeeService();
        this.quotationService = new QuotationService();
        this.settingService = new SettingService();
        initComponents();
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        this.chargePersonCombo();
        this.chargeEmployeeCombo();
        GeneralParameter.chargeSetting();
        this.documentControlNumber();
    }

    public WorkOrderView(java.awt.Frame parent, boolean modal, WorkOrderService wos) {
        super(parent, modal);
        this.ds = new DetailService();
        this.pns = new PersonService();
        //this.wos = new WorkOrderService();
        this.dtm = new DetailTableModel();
        this.employeeService = new EmployeeService();
        this.quotationService = new QuotationService();
        this.settingService = new SettingService();
        initComponents();
        this.auxTot = Math.pow(10, GeneralParameter.ACCURACY_VALUE);
        this.wos = wos;
        this.chargePersonCombo();
        this.chargeEmployeeCombo();
        this.chargeWorkOrderView();
        //GeneralParameter.chargeSetting();
        //this.documentControlNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        pruebaJC = new javax.swing.JComboBox();
        add = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        workOrderValueTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        workOrderAdvanceTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        workOrderBalanceTxt = new javax.swing.JTextField();
        workOrderSubtotalLabel = new javax.swing.JLabel();
        workOrderSubtotalTxt = new javax.swing.JTextField();
        workOrderIvaBt = new javax.swing.JTextField();
        workOrderIvaLabel = new javax.swing.JLabel();
        workOrderTotalTxt = new javax.swing.JTextField();
        workOrderTotalLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workOrderDetailTable = new javax.swing.JTable();
        workOrderAddBt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        workOrderQuotationRb = new javax.swing.JRadioButton();
        workOrderRb = new javax.swing.JRadioButton();
        workOrderInvoiceRb = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        workOrderNumberTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        workOrderIssueDc = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        workOrderDeliveryDc = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        workOrderStateCb = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        searchNameComboText = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        workOrderPersonNameTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        workOrderPersonLastNameTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        workOrderPersonIdentificationTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        workOrderPersonPhoneTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        workOrderPersonAddressTxt = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        employeeComboBox = new javax.swing.JComboBox();
        workOrderCancelBt = new javax.swing.JButton();
        workOrderSaveBt = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        workOrderHightPriorityJrb = new javax.swing.JRadioButton();
        workOrderNormalPriorityJrb = new javax.swing.JRadioButton();
        workOrderLowPriorityJrb = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        workOrderPayFormCb = new javax.swing.JComboBox<>();
        ivaOptionCb = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();

        pruebaJC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        add.setText("jButton1");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(pruebaJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(add)
                .addContainerGap(439, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pruebaJC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add))
                .addContainerGap(495, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel1.setText("VALOR:");

        workOrderValueTxt.setEditable(false);
        workOrderValueTxt.setText("0.00");
        workOrderValueTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderValueTxtActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel2.setText("ANTICIPO:");

        workOrderAdvanceTxt.setText("0.00");
        workOrderAdvanceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderAdvanceTxtActionPerformed(evt);
            }
        });
        workOrderAdvanceTxt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                workOrderAdvanceTxtPropertyChange(evt);
            }
        });
        workOrderAdvanceTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                workOrderAdvanceTxtKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel3.setText("SALDO:");

        workOrderBalanceTxt.setText("0.00");
        workOrderBalanceTxt.setEnabled(false);

        workOrderSubtotalLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderSubtotalLabel.setText("SUBTOTAL:");

        workOrderSubtotalTxt.setText("0.00");

        workOrderIvaBt.setText("0.00");

        workOrderIvaLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderIvaLabel.setText("IVA:");

        workOrderTotalTxt.setText("0.00");
        workOrderTotalTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderTotalTxtActionPerformed(evt);
            }
        });

        workOrderTotalLabel.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderTotalLabel.setText("TOTAL:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(workOrderAdvanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38)
                        .addComponent(workOrderSubtotalLabel)
                        .addGap(47, 47, 47)
                        .addComponent(workOrderIvaLabel)
                        .addGap(62, 62, 62)
                        .addComponent(workOrderTotalLabel)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderBalanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderSubtotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderIvaBt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderTotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(workOrderSubtotalLabel)
                    .addComponent(workOrderIvaLabel)
                    .addComponent(workOrderTotalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workOrderBalanceTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(workOrderAdvanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(workOrderValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(workOrderSubtotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(workOrderIvaBt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(workOrderTotalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        workOrderDetailTable.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(workOrderDetailTable);

        workOrderAddBt.setText("AÑADIR");
        workOrderAddBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderAddBtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 153, 255));
        jLabel4.setText("DETALLE");

        workOrderQuotationRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(workOrderQuotationRb);
        workOrderQuotationRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderQuotationRb.setText("Proforma");
        workOrderQuotationRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderQuotationRbActionPerformed(evt);
            }
        });

        workOrderRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(workOrderRb);
        workOrderRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderRb.setSelected(true);
        workOrderRb.setText("Orden de Trabajo");
        workOrderRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderRbActionPerformed(evt);
            }
        });

        workOrderInvoiceRb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(workOrderInvoiceRb);
        workOrderInvoiceRb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderInvoiceRb.setText("Factura");
        workOrderInvoiceRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderInvoiceRbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(workOrderAddBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(workOrderQuotationRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workOrderInvoiceRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(15, 15, 15))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderAddBt)
                    .addComponent(jLabel4)
                    .addComponent(workOrderQuotationRb)
                    .addComponent(workOrderRb)
                    .addComponent(workOrderInvoiceRb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DOCUMENTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N
        jPanel4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Número:");

        workOrderNumberTxt.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        workOrderNumberTxt.setForeground(new java.awt.Color(255, 51, 51));
        workOrderNumberTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        workOrderNumberTxt.setText("000000023");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Fecha de recepción:");

        workOrderIssueDc.setBackground(new java.awt.Color(255, 255, 255));
        workOrderIssueDc.setDate(new Date());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Fecha de entrega:");

        workOrderDeliveryDc.setBackground(new java.awt.Color(255, 255, 255));
        workOrderDeliveryDc.setDate(new Date());

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Estado:");

        workOrderStateCb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderStateCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDIENTE", "PAUSADO", "TERMINADO" }));
        workOrderStateCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderStateCbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workOrderStateCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workOrderDeliveryDc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workOrderNumberTxt)
                    .addComponent(workOrderIssueDc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(workOrderStateCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(workOrderIssueDc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(workOrderDeliveryDc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        searchNameComboText.setEditable(true);
        searchNameComboText.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                searchNameComboTextPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        searchNameComboText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNameComboTextActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Buscar:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Nombre:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Apellido:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Identificación:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Teléfono:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Dirección:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(workOrderPersonNameTxt)
                            .addComponent(workOrderPersonIdentificationTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(workOrderPersonLastNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(workOrderPersonPhoneTxt)))
                    .addComponent(workOrderPersonAddressTxt)
                    .addComponent(searchNameComboText, 0, 450, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchNameComboText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(workOrderPersonNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workOrderPersonLastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderPersonIdentificationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workOrderPersonPhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderPersonAddressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RESPONSABLE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Será realizada por:");

        employeeComboBox.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        employeeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciones un empleado...", "Julio Galán ", "Israel Sotomayor" }));
        employeeComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                employeeComboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(employeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        workOrderCancelBt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderCancelBt.setText("CANCELAR");
        workOrderCancelBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderCancelBtActionPerformed(evt);
            }
        });

        workOrderSaveBt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderSaveBt.setText("GUARDAR");
        workOrderSaveBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workOrderSaveBtActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PRIORIDAD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        workOrderHightPriorityJrb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(workOrderHightPriorityJrb);
        workOrderHightPriorityJrb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderHightPriorityJrb.setText("Alta");

        workOrderNormalPriorityJrb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(workOrderNormalPriorityJrb);
        workOrderNormalPriorityJrb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderNormalPriorityJrb.setText("Media");

        workOrderLowPriorityJrb.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(workOrderLowPriorityJrb);
        workOrderLowPriorityJrb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        workOrderLowPriorityJrb.setText("Baja");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(workOrderHightPriorityJrb)
                .addGap(18, 18, 18)
                .addComponent(workOrderNormalPriorityJrb)
                .addGap(18, 18, 18)
                .addComponent(workOrderLowPriorityJrb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workOrderHightPriorityJrb)
                    .addComponent(workOrderNormalPriorityJrb)
                    .addComponent(workOrderLowPriorityJrb))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel17.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel17.setText("Pago:");

        workOrderPayFormCb.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        workOrderPayFormCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PAGADA", "PENDIENTE", "ANULADA" }));

        ivaOptionCb.setBackground(new java.awt.Color(255, 255, 255));
        ivaOptionCb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        ivaOptionCb.setText("Iva");
        ivaOptionCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivaOptionCbActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel15.setText("Impuesto:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(workOrderPayFormCb, 0, 1, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ivaOptionCb))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(workOrderSaveBt)
                        .addGap(12, 12, 12)
                        .addComponent(workOrderCancelBt))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(workOrderPayFormCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(ivaOptionCb))
                        .addGap(15, 15, 15)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workOrderSaveBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workOrderCancelBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setworkOrderAndAddDetail() {
        this.ds.getDetail().setWorkOrder(this.wos.getWorkOrder());
        this.ds.addDetailList(this.ds.getDetail());
    }

    private void documentControlNumber() {
        if (workOrderRb.isSelected()) {
            workOrderNumberTxt.setText(String.valueOf(GeneralParameter.WORK_ORDER_NUMBER));
        } else if (workOrderQuotationRb.isSelected()) {
            workOrderNumberTxt.setText(String.valueOf(GeneralParameter.QUOTATION_NUMBER));
        } else if (workOrderInvoiceRb.isSelected()) {
            workOrderNumberTxt.setText(GeneralParameter.THIRD_INVOICE_NUMBRE);
        }
    }

    private void workOrderAddBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderAddBtActionPerformed
        // TODO add your handling code here:

        if (this.pns.getPerson().getPersonId() != null) {
            new WorkOrderItemView(null, true, this, this.pns.getPerson().getPrType()).setVisible(true);

            if (this.ds.getDetail().getDetTotal() != null) {

                if (this.workOrderRb.isSelected()) {
                    workOrderSubtotalTxt.setEnabled(false);
                    workOrderIvaBt.setEnabled(false);
                    workOrderTotalTxt.setEnabled(false);

                    this.setworkOrderAndAddDetail();
                    this.updateWorkOrderDetailTable();
                    this.totalIvaCalculate();
                } else if (this.workOrderQuotationRb.isSelected()) {
                    workOrderSubtotalTxt.setEnabled(true);
                    workOrderIvaBt.setEnabled(true);
                    workOrderTotalTxt.setEnabled(true);
                    workOrderAdvanceTxt.setEnabled(false);

                    this.setworkOrderAndAddDetail();
                    this.updateWorkOrderDetailTable();
                    this.totalIvaCalculate();

                } else if (this.workOrderInvoiceRb.isSelected()) {
                    workOrderSubtotalTxt.setEnabled(true);
                    workOrderIvaBt.setEnabled(true);
                    workOrderTotalTxt.setEnabled(true);
                    workOrderAdvanceTxt.setEnabled(false);

                    this.setworkOrderAndAddDetail();
                    this.updateWorkOrderDetailTable();
                    this.totalIvaCalculate();

                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleecionado un cliente");
        }
    }//GEN-LAST:event_workOrderAddBtActionPerformed

    private void totalIvaCalculate() {
        Double subtotal = 0.0;
        Double iva;
        Double total;

        for (int i = 0; i < this.ds.getDetailList().size(); i++) {
            subtotal += this.ds.getDetailList().get(i).getDetTotal();
        }

        if (workOrderRb.isSelected() && !ivaOptionCb.isSelected()) {

            workOrderValueTxt.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(subtotal * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));

        } else {
            workOrderSubtotalTxt.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(subtotal * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
            iva = subtotal * 0.12;
            workOrderIvaBt.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(iva * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
            total = subtotal + iva;
            workOrderTotalTxt.setText(String.valueOf(Operaciones.parteDecimal(Math.rint(total * auxTot) / auxTot, GeneralParameter.ACCURACY_VALUE)));
        }

    }

//Cargamos o actualizamos los datos de la lista detalle en la tabla
    private void updateWorkOrderDetailTable() {
        this.dtm.setList(this.ds.getDetailList());
        this.workOrderDetailTable.setModel(this.dtm);
        this.workOrderDetailTable.updateUI();
    }

    //Cargamos una instancia del detalle del dialogo WorkOrderItemView y creamos una nueva instancia del detalle 
    public void getWorkItemDetail(DetailService detailService) {
        this.ds.setIntance(detailService.getDetail());
    }

    private void chargeEmployeeCombo() {
        employeeComboBox.setModel(new EmployeeComboBoxModel(this.employeeService.list()));
        employeeComboBox.setSelectedIndex(0);
    }

    private void chargePersonCombo() {

        searchNameText = (JTextField) searchNameComboText.getComponent(2);
        searchNameText.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == 27) {
                    searchNameComboText.setPopupVisible(false);
                    return;
                }
                if (evt.getKeyCode() == 10) {
                    if (searchNameComboText.getSelectedIndex() != - 1) {
                        PersonComboBoxModel pcm = (PersonComboBoxModel) searchNameComboText.getModel();
                        pns.setInstance(pcm.getSelectedItem());
                        chargePersonView();
                    }
                    searchNameComboText.setPopupVisible(false);
                    return;
                }

                if (evt.getKeyCode() == 40 || evt.getKeyCode() == 39 || evt.getKeyCode() == 38 || evt.getKeyCode() == 37
                        || evt.getKeyCode() == 36 || evt.getKeyCode() == 16 || evt.getKeyCode() == 35) {
                    return;
                }

                int position = searchNameText.getCaretPosition();
                String s = searchNameText.getText();
                searchNameComboText.setModel(new PersonComboBoxModel(pns.getPersonsByCriteriaType(searchNameText.getText())));
                searchNameText.setText(s);

                searchNameText.setCaretPosition(position);
                searchNameComboText.setPopupVisible(true);
            }
        });
    }

    private void chargePersonView() {
        workOrderPersonNameTxt.setText(this.pns.getPerson().getPrFirstName());
        workOrderPersonLastNameTxt.setText(this.pns.getPerson().getPrLastName());
        workOrderPersonIdentificationTxt.setText(this.pns.getPerson().getPrIdentification());
        workOrderPersonPhoneTxt.setText((this.pns.getPerson().getPrPhone()));
        workOrderPersonAddressTxt.setText(this.pns.getPerson().getPrAddress());
    }

    private void chargeWorkOrderData() {
        this.wos.getWorkOrder().setWorkOrderDescription("Prueba");
        if (this.workOrderStateCb.getSelectedItem().equals("PENDIENTE")) {
            this.wos.getWorkOrder().setWorkOrderState(1);
        } else if (this.workOrderStateCb.getSelectedItem().equals("PAUSADO")) {
            this.wos.getWorkOrder().setWorkOrderState(2);
        } else if (this.workOrderStateCb.getSelectedItem().equals("TERMINADO")) {
            this.wos.getWorkOrder().setWorkOrderState(3);
        }
        this.wos.getWorkOrder().setWorkOrderNumber(workOrderNumberTxt.getText());
        this.wos.getWorkOrder().setWorkOrderIssueDate(workOrderIssueDc.getDate());
        this.wos.getWorkOrder().setWorkOrderDeliveryDate(workOrderDeliveryDc.getDate());
        this.wos.getWorkOrder().setWorkOrderTotal(Double.valueOf(workOrderValueTxt.getText()));
        this.wos.getWorkOrder().setWorkOrderAdvance(Double.valueOf(workOrderAdvanceTxt.getText()));
        this.wos.getWorkOrder().setWorkOrderBalance(Double.valueOf(workOrderBalanceTxt.getText()));

        if (ivaOptionCb.isSelected()) {
            this.wos.getWorkOrder().setWorkOrderSubtotal(Double.valueOf(this.workOrderSubtotalTxt.getText()));
            this.wos.getWorkOrder().setWorkOrderIva(Double.parseDouble(this.workOrderIvaBt.getText()));
            this.wos.getWorkOrder().setWorkOrderInvoiceTotal(Double.valueOf(this.workOrderTotalTxt.getText()));
        } else {
            this.wos.getWorkOrder().setWorkOrderSubtotal(Double.valueOf("0.00"));
            this.wos.getWorkOrder().setWorkOrderIva(Double.valueOf("0.00"));
            this.wos.getWorkOrder().setWorkOrderInvoiceTotal(Double.valueOf("0.00"));
        }

        if (this.workOrderLowPriorityJrb.isSelected()) {
            this.wos.getWorkOrder().setWorkOrderPriority(0);
        } else if (this.workOrderNormalPriorityJrb.isSelected()) {
            this.wos.getWorkOrder().setWorkOrderPriority(1);
        } else if (this.workOrderHightPriorityJrb.isSelected()) {
            this.wos.getWorkOrder().setWorkOrderPriority(2);
        }

        this.wos.getWorkOrder().setWorkOrderType("WorkOrder");

        this.wos.getWorkOrder().setDetailList(this.ds.getDetailList());

        this.wos.getWorkOrder().setPerson(this.pns.getPerson());
        this.wos.getWorkOrder().setEmployee(this.employeeService.getEmployee());

    }

    private void chargeWorkOrderView() {
        if (null != this.wos.getWorkOrder().getWorkOrderState()) {
            switch (this.wos.getWorkOrder().getWorkOrderState()) {
                case 1:
                    this.workOrderStateCb.setSelectedItem("PENDIENTE");
                    break;
                case 2:
                    this.workOrderStateCb.setSelectedItem("PAUSADO");
                    break;
                case 3:
                    this.workOrderStateCb.setSelectedItem("TERMINADO");
                    break;
                default:
                    break;
            }
        }

        //Esta parte es temporal
        switch (this.wos.getWorkOrder().getWorkOrderType()) {
            case "WorkOrder":
                this.workOrderRb.setSelected(true);
                break;
            case "Budget":
                this.workOrderQuotationRb.setSelected(true);
                break;
            case "Invoice":
                this.workOrderInvoiceRb.setSelected(true);
                break;
            default:
                break;
        }
        this.workOrderPayFormCb.setSelectedItem(this.wos.getWorkOrder().getWorkOrderInvoiceState());

        this.workOrderNumberTxt.setText(this.wos.getWorkOrder().getWorkOrderNumber());
        this.workOrderIssueDc.setDate(this.wos.getWorkOrder().getWorkOrderIssueDate());
        this.workOrderDeliveryDc.setDate(this.wos.getWorkOrder().getWorkOrderDeliveryDate());
        this.pns.setInstance(this.wos.getWorkOrder().getPerson());
        this.chargePersonView();

        this.employeeService.setInstance(this.wos.getWorkOrder().getEmployee());
        this.employeeComboBox.setSelectedItem(this.employeeService.getEmployee());

        if (null != this.wos.getWorkOrder().getWorkOrderPriority()) {
            switch (this.wos.getWorkOrder().getWorkOrderPriority()) {
                case 0:
                    this.workOrderLowPriorityJrb.setSelected(true);
                    break;
                case 1:
                    this.workOrderNormalPriorityJrb.setSelected(true);
                    break;
                case 2:
                    this.workOrderHightPriorityJrb.setSelected(true);
                    break;
                default:
                    break;
            }
        }
        this.workOrderValueTxt.setText(String.valueOf(this.wos.getWorkOrder().getWorkOrderTotal()));
        this.workOrderBalanceTxt.setText(String.valueOf(this.wos.getWorkOrder().getWorkOrderBalance()));
        this.workOrderAdvanceTxt.setText(String.valueOf(this.wos.getWorkOrder().getWorkOrderAdvance()));

        this.ds.setDetailList(this.wos.getWorkOrder().getDetailList());
        this.updateWorkOrderDetailTable();
    }


    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        workOrderPersonAddressTxt.setText(pruebaJC.getSelectedItem().toString());
    }//GEN-LAST:event_addActionPerformed

    private void workOrderValueTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderValueTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workOrderValueTxtActionPerformed

    private void searchNameComboTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNameComboTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNameComboTextActionPerformed

    private void searchNameComboTextPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_searchNameComboTextPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (searchNameComboText.getItemCount() != 0) {
            PersonComboBoxModel pcbm = (PersonComboBoxModel) searchNameComboText.getModel();
            this.pns.setInstance(pcbm.getSelectedItem());
            if (this.pns.getPerson() != null) {
                this.chargePersonView();
            }
        }
    }//GEN-LAST:event_searchNameComboTextPopupMenuWillBecomeInvisible

    private void workOrderSaveBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderSaveBtActionPerformed
        // TODO add your handling code here:

        if (workOrderRb.isSelected()) {
            if (this.pns.getPerson().getPersonId() != null) {
                if (!this.ds.getDetailList().isEmpty()) {
                    if (this.employeeService.getEmployee().getEmployeeId() != null) {
                        if (ivaOptionCb.isSelected()) {
                            new CambioV(null, true, Double.parseDouble(workOrderTotalTxt.getText()), this.wos).setVisible(true);
                        } else {
                            new CambioV(null, true, Double.parseDouble(workOrderValueTxt.getText()), this.wos).setVisible(true);
                        }

                        if (this.wos.getWorkOrder().getWorkOrderChange() != null) {
                            System.out.println("EL VUELTO ES: " + this.wos.getWorkOrder().getWorkOrderChange());

                            if (this.wos.getWorkOrder().getWorkOrderId() == null) {
                                this.chargeWorkOrderData();
                                if (this.wos.saveWorkOrder()) {
                                    JOptionPane.showMessageDialog(this, "La orden de trabajo ha sido guardada correctamente");
                                    //Actualizamos el número de orden de trabajo
                                    this.updateDocumentNumber();
                                    //Para imprimir el reporte
                                    Report print = new Report();
                                    print.printWorkOrder(wos, dtm);
                                    this.dispose();
                                } else {
                                    JOptionPane.showMessageDialog(this, "No se guardo la orden de trabajo");
                                }
                            } else if (this.wos.getWorkOrder().getWorkOrderId() != null) {
                                this.chargeWorkOrderData();
                                if (this.wos.updateWorkOrder()) {
                                    JOptionPane.showMessageDialog(this, "Orden de trabajo modificada correctamente");
                                    //En esta parte iria si desea convertir la orden de trabajo en factura o no
                                }
                            }

                        } else {
                            System.out.println("LA VENTANA SE HA CERRADO");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún empleado");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La orden de trabajo no tiene items");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No ha seleccionado ningún cliente");
            }

        } else if (workOrderQuotationRb.isSelected()) {
            if (this.pns.getPerson().getPersonId() != null) {
                if (!this.ds.getDetailList().isEmpty()) {
                    if (this.quotationService.getQuotation().getQuotationId() == null) {
                        this.chargeQuotationData();
                        if (this.quotationService.saveQuotation()) {
                            JOptionPane.showMessageDialog(this, "La proforma ha sido guardada correctamente");
                            //Actualizamos el número de proforma automáticamente
                            this.updateDocumentNumber();
                            //Imprimimos el reporte
                            Report print = new Report();
                            print.printQuotation(quotationService, dtm);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "No se guardo la proforma");
                        }
                    } else if (this.quotationService.getQuotation().getQuotationId() != null) {
                        this.chargeQuotationData();
                        if (this.quotationService.updateQuotation()) {
                            JOptionPane.showMessageDialog(this, "Proforma modificada correctamente");
                            //En esta parte iria si desea convertir la orden de trabajo en factura o no
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La orden de trabajo no tiene items");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No ha seleccionado ningún cliente");
            }
        } else if (workOrderInvoiceRb.isSelected()) {
            JOptionPane.showMessageDialog(this, "Ha guardado la factura correctamente");
        }
    }//GEN-LAST:event_workOrderSaveBtActionPerformed

    private void updateDocumentNumber() {
        this.settingService.setInstance(this.settingService.getUniqueSetting());
        if (workOrderQuotationRb.isSelected()) {
            this.settingService.getSetting().setQUOTATION_NUMBER(Integer.valueOf(workOrderNumberTxt.getText()) + 1);
        } else if (workOrderRb.isSelected()) {
            this.settingService.getSetting().setWORK_ORDER_NUMBER(Integer.valueOf(workOrderNumberTxt.getText()) + 1);
        } else if (workOrderInvoiceRb.isSelected()) {
            this.settingService.getSetting().setTHIRD_INVOICE_NUMBER("" + (Integer.valueOf(workOrderNumberTxt.getText()) + 1));
        }

        if (this.settingService.updateSetting()) {
            System.out.println("Se ha guardado correctamete la configuracion");
        }
    }

    private void chargeQuotationData() {
        this.quotationService.getQuotation().setQuotationNumber(workOrderNumberTxt.getText());
        this.quotationService.getQuotation().setQuotationSubtotal(Double.valueOf(workOrderSubtotalTxt.getText()));
        this.quotationService.getQuotation().setQuotationIva(Double.valueOf(workOrderIvaBt.getText()));
        this.quotationService.getQuotation().setQuotationTotal(Double.valueOf(workOrderTotalTxt.getText()));
        this.quotationService.getQuotation().setQuotationDate(workOrderIssueDc.getDate());
        this.quotationService.getQuotation().setPerson(this.pns.getPerson());
    }

    private void workOrderStateCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderStateCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workOrderStateCbActionPerformed

    private void workOrderCancelBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderCancelBtActionPerformed
        // TODO add your handling code here:
        this.closeWindow();
    }//GEN-LAST:event_workOrderCancelBtActionPerformed

    private void employeeComboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_employeeComboBoxPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        EmployeeComboBoxModel employeeComboBoxModel = (EmployeeComboBoxModel) employeeComboBox.getModel();
        this.employeeService.setInstance(employeeComboBoxModel.getSelectedItem());
    }//GEN-LAST:event_employeeComboBoxPopupMenuWillBecomeInvisible

    private void workOrderAdvanceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderAdvanceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workOrderAdvanceTxtActionPerformed

    private void workOrderAdvanceTxtPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_workOrderAdvanceTxtPropertyChange
        // TODO add your handling code here:
        //balanceTotalCalculate();
    }//GEN-LAST:event_workOrderAdvanceTxtPropertyChange

    private void workOrderAdvanceTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_workOrderAdvanceTxtKeyReleased
        // TODO add your handling code here:
        balanceTotalCalculate();
    }//GEN-LAST:event_workOrderAdvanceTxtKeyReleased

    private void workOrderQuotationRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderQuotationRbActionPerformed
        // TODO add your handling code here:
        if (workOrderQuotationRb.isSelected()) {
            workOrderPayFormCb.setEnabled(true);
            ivaOptionCb.setSelected(true);
            workOrderNumberTxt.setText(String.valueOf(GeneralParameter.QUOTATION_NUMBER));
            workOrderHightPriorityJrb.setEnabled(false);
            workOrderNormalPriorityJrb.setEnabled(false);
            workOrderLowPriorityJrb.setEnabled(false);
            employeeComboBox.setEnabled(false);
            workOrderPayFormCb.setEnabled(false);
            workOrderAdvanceTxt.setEditable(false);
            workOrderSubtotalTxt.setEditable(false);
            workOrderIvaBt.setEditable(false);
            workOrderTotalTxt.setEditable(false);
            workOrderStateCb.setEnabled(false);
        }
    }//GEN-LAST:event_workOrderQuotationRbActionPerformed

    private void workOrderInvoiceRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderInvoiceRbActionPerformed
        // TODO add your handling code here:
        if (workOrderInvoiceRb.isSelected()) {
            workOrderPayFormCb.setEnabled(true);
            workOrderPayFormCb.setSelectedIndex(0);
            workOrderNumberTxt.setText(GeneralParameter.THIRD_INVOICE_NUMBRE);

        }
    }//GEN-LAST:event_workOrderInvoiceRbActionPerformed

    private void workOrderRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderRbActionPerformed
        // TODO add your handling code here:
        if (workOrderRb.isSelected()) {
            workOrderPayFormCb.setEnabled(false);
            workOrderPayFormCb.setSelectedItem("Seleccione...");
            workOrderNumberTxt.setText(String.valueOf(GeneralParameter.WORK_ORDER_NUMBER));
            workOrderPayFormCb.setEnabled(true);
            workOrderAdvanceTxt.setEditable(true);
            workOrderStateCb.setEnabled(true);
            employeeComboBox.setEnabled(true);
            workOrderHightPriorityJrb.setEnabled(true);
            workOrderNormalPriorityJrb.setEnabled(true);
            workOrderLowPriorityJrb.setEnabled(true);
        }
    }//GEN-LAST:event_workOrderRbActionPerformed

    private void ivaOptionCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivaOptionCbActionPerformed
        // TODO add your handling code here:
        if (ivaOptionCb.isSelected()) {
            totalIvaCalculate();
        } else {
            workOrderSubtotalTxt.setText("0.00");
            workOrderIvaBt.setText("0.00");
            workOrderTotalTxt.setText("0.00");
        }
    }//GEN-LAST:event_ivaOptionCbActionPerformed

    private void workOrderTotalTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workOrderTotalTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workOrderTotalTxtActionPerformed

    private void balanceTotalCalculate() {
        Double temp;
        temp = Double.valueOf(this.workOrderValueTxt.getText()) - Double.valueOf(this.workOrderAdvanceTxt.getText());
        this.workOrderBalanceTxt.setText(String.valueOf(temp));
    }

    //Método encargado de cerrar todos los procesos de un JDialog
    private void closeWindow() {
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox employeeComboBox;
    private javax.swing.JCheckBox ivaOptionCb;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox pruebaJC;
    private javax.swing.JComboBox searchNameComboText;
    private javax.swing.JButton workOrderAddBt;
    private javax.swing.JTextField workOrderAdvanceTxt;
    private javax.swing.JTextField workOrderBalanceTxt;
    private javax.swing.JButton workOrderCancelBt;
    private com.toedter.calendar.JDateChooser workOrderDeliveryDc;
    private javax.swing.JTable workOrderDetailTable;
    private javax.swing.JRadioButton workOrderHightPriorityJrb;
    private javax.swing.JRadioButton workOrderInvoiceRb;
    private com.toedter.calendar.JDateChooser workOrderIssueDc;
    private javax.swing.JTextField workOrderIvaBt;
    private javax.swing.JLabel workOrderIvaLabel;
    private javax.swing.JRadioButton workOrderLowPriorityJrb;
    private javax.swing.JRadioButton workOrderNormalPriorityJrb;
    private javax.swing.JTextField workOrderNumberTxt;
    private javax.swing.JComboBox<String> workOrderPayFormCb;
    private javax.swing.JTextField workOrderPersonAddressTxt;
    private javax.swing.JTextField workOrderPersonIdentificationTxt;
    private javax.swing.JTextField workOrderPersonLastNameTxt;
    private javax.swing.JTextField workOrderPersonNameTxt;
    private javax.swing.JTextField workOrderPersonPhoneTxt;
    private javax.swing.JRadioButton workOrderQuotationRb;
    private javax.swing.JRadioButton workOrderRb;
    private javax.swing.JButton workOrderSaveBt;
    private javax.swing.JComboBox<String> workOrderStateCb;
    private javax.swing.JLabel workOrderSubtotalLabel;
    private javax.swing.JTextField workOrderSubtotalTxt;
    private javax.swing.JLabel workOrderTotalLabel;
    private javax.swing.JTextField workOrderTotalTxt;
    private javax.swing.JTextField workOrderValueTxt;
    // End of variables declaration//GEN-END:variables

}